{"version":3,"sources":["webpack:///./src/components/cambackdrop/cambackdrop.js","webpack:///./src/pages/clipboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js","webpack:///./src/components/textbox/textbox.js"],"names":["CV_KEY","process","CamBackDrop","props","_this","_React$Component","call","this","state","mediaStream","facingMode","captureURL","textBoxes","recognitionResult","cachedText","renderImage","loading","ctx","width","height","frameCount","loop","init","req","player","React","createRef","canvas","initCanvas","bind","assertThisInitialized_default","initCamera","reverseCamera","offCamera","captureFrame","getCV","genText","captureImage","bounds","current","getBoundingClientRect","setAttribute","getContext","_callee2","stream","_this2","regenerator_default","a","wrap","_context2","prev","next","setState","navigator","mediaDevices","getUserMedia","audio","video","sent","srcObject","Promise","res","rej","setTimeout","setInterval","asyncToGenerator_default","mark","_callee","_context","stop","t0","console","log","_callee3","_context3","_callee4","_context4","clearTimeout","clearInterval","getTracks","_callee5","_context5","drawImage","toDataURL","chunkDataURL","dataURL","data","split","bytes","slice","window","atob","buf","ArrayBuffer","length","byteArr","Uint8Array","i","charCodeAt","_callee7","chunkedData","jobRes","CVRes","_context7","fetch","method","headers","Content-Type","Ocp-Apim-Subscription-Key","body","get","then","_ref2","_callee6","_context6","json","abrupt","_x","apply","arguments","status","_callee8","_this3","_context8","save","lines","forEach","line","text","angle","Math","atan2","boundingBox","PI","words","word","coords","offset","concat","str","el","react_default","createElement","textbox","key","random","x","y","abs","size","t1","t2","t3","restore","_callee9","captures","_context9","pause","store","date","Date","now","originalImage","originalDimension","componentWillUnmount","render","_this4","className","styles","backdrop","loader","map","e","ref","autoPlay","playsInline","muted","style","transform","prompt","onClick","controls","gatsby_browser_entry","to","Component","connect","readerBgColor","readerColor","readerFont","bgColor","dispatch","changeBG","_ref","layout","seo","title","cambackdrop","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","changeReaderBG","changeReaderColor","changeReaderFont","changeLineHeight","changeLetterSpacing","saveTextToSpeechToken","_constants__WEBPACK_IMPORTED_MODULE_0__","store__WEBPACK_IMPORTED_MODULE_1__","type","consts","lineHeight","letterSpacing","token","tokenTimestamp","ttsToken","m","module","exports","require","default","ProdPageRenderer","location","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","isCollapse","toggleNav","Fragment","menuToggle","dark","light","navContainer","isActive","nav","profile","src","pages","url","page","activeClassName","pageActive","Layout","backgroundColor","_2924840780","node","Textbox","zIndex","position","top","left","margin","fontSize","color","fontFamily","readerLineHeight","readerLetterSpacing"],"mappings":"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","file":"component---src-pages-clipboard-js-0f6a3c35b2556cf82df4.js","sourcesContent":["import React from 'react';\n\nimport styles from './cambackdrop.module.scss';\n\nimport Textbox from '../textbox/textbox';\n\nimport { connect } from 'react-redux';\n\nimport { Link } from 'gatsby';\n\nimport * as store from 'store';\n\nconst CV_BASE =\n    'https://cors-anywhere.herokuapp.com/https://eastus.api.cognitive.microsoft.com/vision/v2.0/recognizeText?mode=Printed';\nconst CV_KEY = process.env.GATSBY_AZURE_API_KEY;\n\nconst mapStateToProps = state => {\n    return {\n        readerBgColor: state.readerBgColor,\n        readerColor: state.readerColor,\n        readerFont: state.readerFont,\n    };\n};\n\nclass CamBackDrop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mediaStream: null,\n            facingMode: 'user',\n            captureURL: '',\n            textBoxes: [],\n            recognitionResult: null,\n            cachedText: '',\n            renderImage: '',\n            loading: false,\n        };\n\n        //temp\n        this.ctx = null;\n        this.width = 0;\n        this.height = 0;\n        this.frameCount = 0;\n\n        this.loop = null;\n        this.init = null;\n        this.req = false;\n\n        //ref\n        this.player = React.createRef();\n        this.canvas = React.createRef();\n\n        //functs\n        this.initCanvas = this.initCanvas.bind(this);\n        this.initCamera = this.initCamera.bind(this);\n        this.reverseCamera = this.reverseCamera.bind(this);\n        this.offCamera = this.offCamera.bind(this);\n        this.captureFrame = this.captureFrame.bind(this);\n        this.getCV = this.getCV.bind(this);\n        this.genText = this.genText.bind(this);\n        this.captureImage = this.captureImage.bind(this);\n    }\n\n    //init dimensions and context\n    initCanvas() {\n        let bounds = this.player.current.getBoundingClientRect();\n        this.width = bounds.width;\n        this.height = bounds.height;\n        this.canvas.current.setAttribute('width', this.width);\n        this.canvas.current.setAttribute('height', this.height);\n        this.ctx = this.canvas.current.getContext('2d');\n    }\n\n    //get media and setup canvas\n    async initCamera() {\n        //reset textboxes and cache\n        this.setState({ textBoxes: [], cachedText: '' });\n\n        try {\n            let stream = await navigator.mediaDevices.getUserMedia({\n                audio: false,\n                video: { facingMode: this.state.facingMode },\n            });\n\n            this.player.current.srcObject = stream;\n            this.setState({ mediaStream: stream });\n\n            //init canvas\n            await new Promise((res, rej) => {\n                this.setState({ loading: true });\n                this.init = setTimeout(() => {\n                    this.initCanvas();\n                    this.setState({ loading: false });\n                    res();\n                }, 1000);\n            });\n            //init capture\n            this.loop = setInterval(async () => {\n                if (!this.req) {\n                    this.req = true;\n                    await this.captureFrame();\n                    await this.getCV();\n                    await this.genText();\n                    this.req = false;\n                }\n            }, 100);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async reverseCamera() {\n        this.setState({\n            facingMode:\n                this.state.facingMode === 'user' ? 'environment' : 'user',\n        });\n\n        await this.offCamera();\n\n        //attempt reverse\n        try {\n            await this.initCamera();\n        } catch (err) {\n            await this.reverseCamera();\n        }\n    }\n\n    async offCamera() {\n        clearTimeout(this.init);\n        clearInterval(this.loop);\n\n        if (this.state.mediaStream)\n            await this.state.mediaStream.getTracks()[0].stop();\n\n        this.setState({ mediaStream: null });\n        //this.player.current.srcObject = null;\n    }\n\n    //capture frames and run analysis\n    async captureFrame() {\n        this.ctx.drawImage(this.player.current, 0, 0);\n\n        let captureURL = await this.canvas.current.toDataURL('image/jpeg');\n        this.setState({ captureURL: captureURL });\n\n        this.frameCount++;\n    }\n\n    //chunks data url for payloading\n    chunkDataURL(dataURL) {\n        let data = dataURL.split(',')[1];\n        let mimeType = dataURL.split(';')[0].slice(5);\n\n        let bytes = window.atob(data);\n        let buf = new ArrayBuffer(bytes.length);\n        let byteArr = new Uint8Array(buf);\n\n        for (let i = 0; i < bytes.length; i++) {\n            byteArr[i] = bytes.charCodeAt(i);\n        }\n\n        return byteArr;\n    }\n\n    //chain 2 requests to get analysis\n    async getCV() {\n        let chunkedData = this.chunkDataURL(this.state.captureURL);\n\n        let jobRes = await fetch(CV_BASE, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/octet-stream',\n                'Ocp-Apim-Subscription-Key': CV_KEY,\n            },\n            body: chunkedData,\n        });\n\n        let CVRes;\n        do {\n            CVRes = await fetch(jobRes.headers.get('Operation-Location'), {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Ocp-Apim-Subscription-Key': CV_KEY,\n                },\n            }).then(async res => await res.json());\n        } while (CVRes.status != 'Succeeded');\n        console.log(CVRes);\n        this.setState({\n            recognitionResult: CVRes.recognitionResult,\n        });\n    }\n\n    //generate textboxes, render image and cache text\n    async genText() {\n        //clear textboxes and text\n        this.setState({ textBoxes: [], cachedText: '' });\n\n        this.ctx.save();\n\n        let cachedText = '';\n        this.state.recognitionResult.lines.forEach(line => {\n            cachedText += line.text + '\\n';\n\n            let angle = Math.atan2(\n                line.boundingBox[3] - line.boundingBox[1],\n                line.boundingBox[2] - line.boundingBox[0]\n            );\n            console.log((angle * 180) / Math.PI);\n\n            line.words.forEach(word => {\n                let coords = word.boundingBox;\n                let offset = this.canvas.current.getBoundingClientRect();\n\n                this.setState({\n                    textBoxes: this.state.textBoxes.concat([\n                        {\n                            str: word.text,\n                            el: (\n                                <Textbox\n                                    key={word.text + Math.random()}\n                                    x={coords[6] + offset.x}\n                                    y={\n                                        coords[7] +\n                                        offset.y -\n                                        Math.abs(coords[1] - coords[7])\n                                    }\n                                    text={word.text}\n                                    size={Math.abs(coords[1] - coords[7])}\n                                    angle={angle}\n                                />\n                            ),\n                        },\n                    ]),\n                });\n                /*\n                this.ctx.font = `${Math.abs(coords[1] - coords[7])}px ${\n                    this.props.readerFont\n                    }`;\n\n\n                this.ctx.fillStyle = this.props.readerBgColor;\n                this.ctx.fillRect(\n                    coords[0],\n                    coords[1],\n                    this.ctx.measureText(word.text).width,\n                    Math.abs(coords[1] - coords[7])\n                );\n                this.ctx.fillStyle = this.props.readerColor;\n                this.ctx.fillText(word.text, coords[6], coords[7]);*/\n            });\n        });\n        this.setState({\n            cachedText: cachedText,\n            renderImage: await this.canvas.current.toDataURL('image/jpeg'),\n        });\n\n        //restore\n        this.ctx.restore();\n        //this.ctx.drawImage(, 0, 0, this.width, this.height);\n    }\n\n    //captures and writes to image\n    async captureImage() {\n        console.log('Captured!');\n        this.player.current.pause();\n        await this.offCamera();\n\n        //run 1 more time\n        if (this.ctx) {\n            await this.captureFrame();\n            await this.getCV();\n            await this.genText();\n        }\n\n        if (this.state.recognitionResult != null) {\n            let captures = store.get('captures');\n\n            if (captures == null) {\n                store.set('captures', [\n                    {\n                        date: Date.now(),\n                        recognitionResult: this.state.recognitionResult,\n                        cachedText: this.state.cachedText,\n                        renderImage: this.state.renderImage,\n                        originalImage: this.state.captureURL,\n                        originalDimension: {\n                            width: this.width,\n                            height: this.height,\n                        },\n                    },\n                ]);\n            } else {\n                store.set(\n                    'captures',\n                    captures.concat([\n                        {\n                            date: Date.now(),\n                            recognitionResult: this.state.recognitionResult,\n                            cachedText: this.state.cachedText,\n                            renderImage: this.state.renderImage,\n                            originalImage: this.state.captureURL,\n                            originalDimension: {\n                                width: this.width,\n                                height: this.height,\n                            },\n                        },\n                    ])\n                );\n            }\n\n            console.log(this.state);\n            console.log(store.get('captures'));\n        }\n    }\n\n    componentWillUnmount() {\n        this.offCamera();\n    }\n\n    render() {\n        return (\n            <div className={styles.backdrop}>\n                {this.state.loading ? (\n                    <div className={styles.loader}>\n                        <h1>Loading...</h1>\n                    </div>\n                ) : null}\n                {this.state.textBoxes.map(e => e.el)}\n                {/*<img src={this.state.captureURL} />*/}\n                {/*rotation only works well for mobile -> todo fix*/}\n                <video\n                    ref={this.player}\n                    autoPlay\n                    playsInline\n                    muted\n                    style={{\n                        transform: `translate(-50%, -50%) rotateY(${\n                            this.state.facingMode === 'user' && false\n                                ? '180'\n                                : '0'\n                        }deg)`,\n                    }}\n                />\n                <canvas\n                    ref={this.canvas}\n                    style={{ transform: `translate(-50%, -50%)` }}\n                />\n\n                {!this.state.mediaStream ? (\n                    <div\n                        className={styles.prompt}\n                        onClick={() => {\n                            this.setState({ facingMode: 'user' });\n                            this.initCamera();\n                        }}\n                    >\n                        <p>Turn on Camera</p>\n                    </div>\n                ) : null}\n                <div className={styles.controls}>\n                    <div>\n                        <Link to=\"/gallery\">\n                            <button onClick={this.offCamera}>\n                                <i className=\"fas fa-images\" />\n                            </button>\n                        </Link>\n                    </div>\n                    <div>\n                        <button onClick={this.captureImage}>\n                            <i className=\"far fa-circle\" />\n                        </button>\n                    </div>\n                    <div>\n                        <button onClick={this.reverseCamera}>\n                            <i className=\"fas fa-sync-alt\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(CamBackDrop);\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout/layout';\nimport Image from '../components/image';\nimport SEO from '../components/seo';\n\nimport CamBackDrop from '../components/cambackdrop/cambackdrop';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst ClipboardPage = ({ changeBG }) => {\n    changeBG('black');\n    return (\n        <Layout>\n            <SEO title=\"Clipboard\" />\n            <CamBackDrop />\n        </Layout>\n    );\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ClipboardPage);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\nimport * as store from 'store';\n\nexport function changeBG(bgColor) {\n    store.set('bgColor', bgColor);\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\n}\n\nexport function changeReaderBG(readerBgColor) {\n    store.set('readerBgColor', readerBgColor);\n    return { type: consts.CHANGE_READER_BG, readerBgColor: readerBgColor };\n}\n\nexport function changeReaderColor(readerColor) {\n    store.set('readerColor', readerColor);\n    return { type: consts.CHANGE_READER_COLOR, readerColor: readerColor };\n}\n\nexport function changeReaderFont(readerFont) {\n    store.set('readerFont', readerFont);\n    return { type: consts.CHANGE_READER_FONT, readerFont: readerFont };\n}\n\nexport function changeLineHeight(lineHeight) {\n    store.set('lineHeight', lineHeight);\n    return { type: consts.CHANGE_LINE_HEIGHT, lineHeight: lineHeight };\n}\n\nexport function changeLetterSpacing(letterSpacing) {\n    store.set('letterSpacing', letterSpacing);\n    return { type: consts.CHANGE_LETTER_SPACING, letterSpacing: letterSpacing };\n}\n\nexport function saveTextToSpeechToken(token) {\n    store.set('ttsToken', token);\n    let tokenTimestamp = new Date();\n    store.set('tokenTimestamp', tokenTimestamp);\n\n    return {\n        type: consts.SAVE_TEXT_TO_SPEECH_TOKEN,\n        ttsToken: token,\n        tokenTimestamp: tokenTimestamp,\n    };\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        >\n            <link\n                rel=\"stylesheet\"\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\n                crossorigin=\"anonymous\"\n            />\n        </Helmet>\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nimport styles from './nav.module.scss';\n\nimport '../styles/hamburgers/hamburgers.scss';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCollapse: false,\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({ isCollapse: !this.state.isCollapse });\n    }\n\n    render() {\n        return (\n            <>\n                <div\n                    className={`${\n                        styles.menuToggle\n                    } hamburger hamburger--spin ${\n                        this.state.isCollapse ? 'is-active' : ''\n                    }`}\n                    onClick={this.toggleNav}\n                    type=\"button\"\n                >\n                    <span className=\"hamburger-box\">\n                        <span\n                            className={`hamburger-inner ${\n                                this.props.bgColor == 'black'\n                                    ? styles.dark\n                                    : styles.light\n                            }`}\n                        />\n                    </span>\n                </div>\n                <div\n                    className={`${styles.navContainer} ${\n                        this.state.isCollapse ? styles.isActive : ''\n                    }`}\n                >\n                    <div className={styles.nav}>\n                        <div className={styles.profile}>\n                            <Link to=\"/\">\n                                <img\n                                    src={require('../../images/reading-profile.png')}\n                                />\n                            </Link>\n                            <h1>Easyread</h1>\n                            <p>Welcome back!</p>\n                        </div>\n                        <hr />\n                        <ul className={styles.pages}>\n                            {[\n                                {\n                                    name: 'Clipboard',\n                                    url: '/clipboard',\n                                },\n                                {\n                                    name: 'Gallery',\n                                    url: '/gallery',\n                                },\n                                {\n                                    name: 'Settings',\n                                    url: '/settings',\n                                },\n                                /*\n                                {\n                                    name: 'Progress Tracker',\n                                    url: '/tracker',\n                                },*/\n                            ].map(e => (\n                                <li key={e.url} onClick={this.toggleNav}>\n                                    <Link\n                                        className={styles.page}\n                                        activeClassName={styles.pageActive}\n                                        to={e.url}\n                                    >\n                                        <i className=\"fas fa-heart fa-2x\" />\n                                        <p>{e.name}</p>\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Nav);\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Nav from '../nav/nav';\nimport './layout.scss';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst Layout = ({ bgColor, changeBG, children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Nav />\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\n                    {/*\n                   <button onClick={() => changeBG('red')}>red</button>\n                    <button onClick={() => changeBG('white')}>white</button>\n                   */}\n                    <main>{children}</main>\n                    <footer />\n                </div>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Layout);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        readerBgColor: state.readerBgColor,\n        readerColor: state.readerColor,\n        readerFont: state.readerFont,\n        readerLineHeight: state.readerLineHeight,\n        readerLetterSpacing: state.readerLetterSpacing,\n    };\n};\n\nclass Textbox extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    backgroundColor: this.props.readerBgColor,\n                    zIndex: '1',\n                    position: 'fixed',\n                    top: this.props.y,\n                    left: this.props.x,\n                    transform: `rotate(${\n                        this.props.angle ? this.props.angle : 0\n                    }rad)`,\n                }}\n            >\n                <h1\n                    style={{\n                        margin: 0,\n                        fontSize: this.props.size,\n                        color: this.props.readerColor,\n                        fontFamily: this.props.readerFont,\n                        lineHeight: this.props.readerLineHeight,\n                        letterSpacing: `${this.props.readerLetterSpacing}px`,\n                    }}\n                >\n                    {this.props.text}\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Textbox);\n"],"sourceRoot":""}