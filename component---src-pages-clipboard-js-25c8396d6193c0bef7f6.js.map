{"version":3,"sources":["webpack:///./src/components/cambackdrop/cambackdrop.js","webpack:///./src/pages/clipboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js"],"names":["CamBackDrop","props","_this","_React$Component","call","this","state","stream","facingMode","capture","captureURL","player","React","createRef","canvas","getCamera","bind","assertThisInitialized_default","reverseCamera","captureCamera","offCamera","componentWillUnmount","_callee","regenerator_default","a","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","audio","video","sent","current","srcObject","setState","t0","console","log","stop","_callee2","_context2","exact","_callee3","_this$player$current$","width","height","ctx","_context3","getBoundingClientRect","setAttribute","getContext","drawImage","scale","toDataURL","_callee4","_context4","getTracks","render","_this2","react_default","createElement","className","styles","backdrop","src","ref","autoPlay","prompt","onClick","controls","Component","connect","bgColor","dispatch","changeBG","_ref","layout","seo","title","cambackdrop","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","_constants__WEBPACK_IMPORTED_MODULE_0__","type","consts","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","isCollapse","toggleNav","Fragment","menuToggle","dark","light","navContainer","isActive","nav","profile","pages","url","map","e","key","gatsby_browser_entry","page","activeClassName","pageActive","to","Layout","style","backgroundColor","_2924840780","node"],"mappings":"0QAkBMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACfA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,MAAQ,CACTC,OAAQ,GACRC,WAAY,OACZC,QAAS,KACTC,WAAY,IAGhBR,EAAKS,OAASC,IAAMC,YACpBX,EAAKY,OAASF,IAAMC,YAEpBX,EAAKa,UAAYb,EAAKa,UAAUC,KAAfC,IAAAf,IACjBA,EAAKgB,cAAgBhB,EAAKgB,cAAcF,KAAnBC,IAAAf,IACrBA,EAAKiB,cAAgBjB,EAAKiB,cAAcH,KAAnBC,IAAAf,IACrBA,EAAKkB,UAAYlB,EAAKkB,UAAUJ,KAAfC,IAAAf,IAhBFA,sCAmBnBmB,qBAAA,WACIhB,KAAKe,eAGHL,wCAAN,SAAAO,IAAA,IAAAf,EAAA,OAAAgB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BC,UAAUC,aAAaC,aAAa,CACnDC,OAAO,EACPC,MAAO,CAAEzB,WAAYH,KAAKC,MAAME,cAJ5C,OAEYD,EAFZmB,EAAAQ,KAOQ7B,KAAKM,OAAOwB,QAAQC,UAAY7B,EAEhCF,KAAKgC,SAAS,CAAE9B,OAAQA,IAThCmB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAWQa,QAAQC,IAARd,EAAAY,IAXR,yBAAAZ,EAAAe,SAAAnB,EAAAjB,KAAA,mEAeMa,4CAAN,SAAAwB,IAAA,OAAAnB,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,aACkC,SAA1BvB,KAAKC,MAAME,WACXH,KAAKgC,SAAS,CAAE7B,WAAY,CAAEoC,MAAO,iBACpCvC,KAAKgC,SAAS,CAAE7B,WAAY,SAHrCmC,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAMcvB,KAAKU,YANnB,OAAA4B,EAAAf,KAAA,uBAAAe,EAAAhB,KAAA,EAAAgB,EAAAL,GAAAK,EAAA,SAAAA,EAAAf,KAAA,GAQcvB,KAAKa,gBARnB,yBAAAyB,EAAAF,SAAAC,EAAArC,KAAA,mEAYMc,4CAAN,SAAA0B,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1B,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAAAkB,EAC0BzC,KAAKM,OAAOwB,QAAQgB,wBAArCJ,EADTD,EACSC,MAAOC,EADhBF,EACgBE,OACZ3C,KAAKS,OAAOqB,QAAQiB,aAAa,QAASL,GAC1C1C,KAAKS,OAAOqB,QAAQiB,aAAa,SAAUJ,IAEvCC,EAAM5C,KAAKS,OAAOqB,QAAQkB,WAAW,OACrCC,UACAjD,KAAKM,OAAOwB,QACZ,EACA,EACAY,EACAC,GAGJC,EAAIM,MAAM,KAAM,GAEhBhB,QAAQC,IAAInC,KAAKM,OAAOwB,QAAQY,OAUjC1C,KAAKgC,SAAS,CAAC3B,WAAYL,KAAKS,OAAOqB,QAAQqB,cAC/CjB,QAAQC,IAAInC,KAAKC,MAAMI,YA3B1B,wBAAAwC,EAAAT,SAAAI,EAAAxC,gEA+BMe,wCAAN,SAAAqC,IAAA,OAAAlC,EAAAC,EAAAC,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OACQvB,KAAKC,MAAMC,QAAQF,KAAKC,MAAMC,OAAOoD,YAAY,GAAGlB,OACxDpC,KAAKgC,SAAS,CAAE9B,OAAQ,KACxBF,KAAKM,OAAOwB,QAAQC,UAAY,KAHpC,wBAAAsB,EAAAjB,SAAAgB,EAAApD,gEAMAuD,OAAA,WAAS,IAAAC,EAAAxD,KACL,OACIyD,EAAAtC,EAAAuC,cAAA,OAAKC,UAAWC,IAAOC,UACnBJ,EAAAtC,EAAAuC,cAAA,OAAKI,IAAK9D,KAAKC,MAAMG,UACrBqD,EAAAtC,EAAAuC,cAAA,SAAOK,IAAK/D,KAAKM,OAAQ0D,UAAQ,IACjCP,EAAAtC,EAAAuC,cAAA,UAAQK,IAAK/D,KAAKS,SAEhBT,KAAKC,MAAMC,OAUT,KATAuD,EAAAtC,EAAAuC,cAAA,OACIC,UAAWC,IAAOK,OAClBC,QAAS,WACLV,EAAKxB,SAAS,CAAE7B,WAAY,SAC5BqD,EAAK9C,cAGT+C,EAAAtC,EAAAuC,cAAA,6BAGRD,EAAAtC,EAAAuC,cAAA,OAAKC,UAAWC,IAAOO,UACnBV,EAAAtC,EAAAuC,cAAA,WACID,EAAAtC,EAAAuC,cAAA,UAAQQ,QAASlE,KAAKe,WAClB0C,EAAAtC,EAAAuC,cAAA,KAAGC,UAAU,oBAGrBF,EAAAtC,EAAAuC,cAAA,WACID,EAAAtC,EAAAuC,cAAA,UAAQQ,QAASlE,KAAKc,eAClB2C,EAAAtC,EAAAuC,cAAA,KAAGC,UAAU,oBAGrBF,EAAAtC,EAAAuC,cAAA,WACID,EAAAtC,EAAAuC,cAAA,UAAQQ,QAASlE,KAAKa,eAClB4C,EAAAtC,EAAAuC,cAAA,KAAGC,UAAU,4BAvHfpD,IAAM6D,WAgIjBC,cA1IS,SAAApE,GACpB,MAAO,CAAEqE,QAASrE,EAAMqE,UAGD,SAAAC,GACvB,MAAO,CACHC,SAAU,SAAAF,GAAO,OAAIC,EAASC,YAASF,OAoIhCD,CAGb1E,GCpHa0E,sBApBS,SAAApE,GACpB,MAAO,CAAEqE,QAASrE,EAAMqE,UAGD,SAAAC,GACvB,MAAO,CACHC,SAAU,SAAAF,GAAO,OAAIC,EAASC,YAASF,OAchCD,CAVO,SAAAI,GAElB,OADAD,EADoCC,EAAfD,UACZ,SAELf,EAAAtC,EAAAuC,cAACgB,EAAA,EAAD,KACIjB,EAAAtC,EAAAuC,cAACiB,EAAA,EAAD,CAAKC,MAAM,cACXnB,EAAAtC,EAAAuC,cAACmB,EAAD,2CC5BZC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAArE,IAAA2D,EAAA,SAaMW,EAAqBlF,IAAMmF,cAAc,IAEzCT,EAAc,SAAArF,GAAK,OACvBuF,EAAAhE,EAAAuC,cAAC+B,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEhG,EAAMiG,MACLD,EAAgBhG,EAAMkG,QAAUF,EAAgBhG,EAAMkG,OAAOD,MAEtDjG,EAAM2D,QAAU3D,EAAMmG,UAC5BnG,EAAMiG,KAAOjG,EAAMiG,KAAKA,KAAOD,EAAgBhG,EAAMkG,OAAOD,MAGvDV,EAAAhE,EAAAuC,cAAA,uCA4BfuB,EAAYe,UAAY,CACtBH,KAAMI,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxB7C,OAAQ0C,IAAUI,KAClBN,SAAUE,IAAUI,wCC1DtBvB,EAAAC,EAAAC,EAAA,sBAAAR,IAAA,IAAA8B,EAAAxB,EAAA,IAEO,SAASN,EAASF,GAErB,OADApC,QAAQC,IAAImC,GACL,CAAEiC,KAAMC,IAAkBlC,QAASA,yBCJ9C,IAAsBmC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,+KCMzCK,EAAmB,SAAArC,GAAkB,IAAfsC,EAAetC,EAAfsC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEzG,IAAMmD,cAAc0D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBd,UAAY,CAC3Be,SAAUd,IAAUuB,MAAM,CACxBL,SAAUlB,IAAUE,OAAOC,aAC1BA,YAGUU,iCCzBfJ,EAAAC,QAAiB7B,EAAA2C,EAAuB,+JCYxC,SAASC,EAATjD,GAAiD,IAAlCkD,EAAkClD,EAAlCkD,YAAaC,EAAqBnD,EAArBmD,KAAMC,EAAepD,EAAfoD,KAAMjD,EAASH,EAATG,MAC5BkD,EADqCC,EAAAlC,KACrCiC,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACIO,EAAA/G,EAAAuC,cAACyE,EAAAhH,EAAD,CACIiH,eAAgB,CACZR,QAEJhD,MAAOA,EACPyD,cAAa,QAAUP,EAAKG,aAAarD,MACzCiD,KAAM,CACF,CACIS,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAAS3D,GAEb,CACI4D,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE/B,CACIH,KAAI,gBACJC,QAAS3D,GAEb,CACI0D,KAAI,sBACJC,QAASP,IAEfU,OAAOb,IAETK,EAAA/G,EAAAuC,cAAA,QACIiF,IAAI,aACJC,KAAK,0DACLC,UAAU,0EACVC,YAAY,eAM5BpB,EAAIqB,aAAe,CACfnB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGfD,EAAI1B,UAAY,CACZ2B,YAAa1B,IAAUE,OACvByB,KAAM3B,IAAUE,OAChB0B,KAAM5B,IAAU+C,QAAQ/C,IAAUC,QAClCtB,MAAOqB,IAAUE,OAAOC,YAGbsB,6SCxETuB,sBACF,SAAAA,EAAYrJ,GAAO,IAAAC,EAAA,OACfA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,MAAQ,CACTiJ,YAAY,GAGhBrJ,EAAKsJ,UAAYtJ,EAAKsJ,UAAUxI,KAAfC,IAAAf,IAPFA,sCAUnBsJ,UAAA,WACInJ,KAAKgC,SAAS,CAAEkH,YAAalJ,KAAKC,MAAMiJ,gBAG5C3F,OAAA,WACI,OACIE,EAAAtC,EAAAuC,cAAAD,EAAAtC,EAAAiI,SAAA,KACI3F,EAAAtC,EAAAuC,cAAA,OACIC,UACIC,IAAOyF,WADF,+BAGLrJ,KAAKC,MAAMiJ,WAAa,YAAc,IAE1ChF,QAASlE,KAAKmJ,UACd5C,KAAK,UAEL9C,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,iBACZF,EAAAtC,EAAAuC,cAAA,QACIC,UAAS,oBACiB,SAAtB3D,KAAKJ,MAAM0E,QACLV,IAAO0F,KACP1F,IAAO2F,WAK7B9F,EAAAtC,EAAAuC,cAAA,OACIC,UAAcC,IAAO4F,aAAZ,KACLxJ,KAAKC,MAAMiJ,WAAatF,IAAO6F,SAAW,KAG9ChG,EAAAtC,EAAAuC,cAAA,OAAKC,UAAWC,IAAO8F,KACnBjG,EAAAtC,EAAAuC,cAAA,OAAKC,UAAWC,IAAO+F,SACnBlG,EAAAtC,EAAAuC,cAAA,OACII,IAAK8C,EAAQ,OAEjBnD,EAAAtC,EAAAuC,cAAA,sBACAD,EAAAtC,EAAAuC,cAAA,2BAEJD,EAAAtC,EAAAuC,cAAA,WACAD,EAAAtC,EAAAuC,cAAA,MAAIC,UAAWC,IAAOgG,OACjB,CACG,CACItB,KAAM,YACNuB,IAAK,cAHZ,CAMG,CACIvB,KAAM,WACNuB,IAAK,aAET,CACIvB,KAAM,mBACNuB,IAAK,aAEXC,IAAI,SAAAC,GAAC,OACHtG,EAAAtC,EAAAuC,cAAA,MAAIsG,IAAKD,EAAEF,KACPpG,EAAAtC,EAAAuC,cAACuG,EAAA,EAAD,CACItG,UAAWC,IAAOsG,KAClBC,gBAAiBvG,IAAOwG,WACxBC,GAAIN,EAAEF,KAENpG,EAAAtC,EAAAuC,cAAA,KAAGC,UAAU,uBACbF,EAAAtC,EAAAuC,cAAA,SAAIqG,EAAEzB,kBA1E5B/H,IAAM6D,YAsFTC,cAhGS,SAAApE,GACpB,MAAO,CAAEqE,QAASrE,EAAMqE,UAGD,SAAAC,GACvB,MAAO,CACHC,SAAU,SAAAF,GAAO,OAAIC,EAASC,YAASF,OA0FhCD,CAGb4E,GCnFIqB,UAAS,SAAA7F,GAAA,IAAGH,EAAHG,EAAGH,QAAmByB,GAAtBtB,EAAYD,SAAZC,EAAsBsB,UAAtB,OACXtC,EAAAtC,EAAAuC,cAACuG,EAAA,EAAD,CACInE,MAAK,aASLvC,OAAQ,SAAAsC,GAAI,OACRpC,EAAAtC,EAAAuC,cAAAD,EAAAtC,EAAAiI,SAAA,KACI3F,EAAAtC,EAAAuC,cAACgG,EAAD,MACAjG,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,OAAO4G,MAAO,CAAEC,gBAAiBlG,IAK5Cb,EAAAtC,EAAAuC,cAAA,YAAOqC,GACPtC,EAAAtC,EAAAuC,cAAA,kBAnBhBmC,KAAA4E,MA0BJH,EAAOtE,UAAY,CACfD,SAAUE,IAAUyE,KAAKtE,YAGd/B,gBAzCS,SAAApE,GACpB,MAAO,CAAEqE,QAASrE,EAAMqE,UAGD,SAAAC,GACvB,MAAO,CACHC,SAAU,SAAAF,GAAO,OAAIC,EAASC,YAASF,OAmChCD,CAGbiG","file":"component---src-pages-clipboard-js-25c8396d6193c0bef7f6.js","sourcesContent":["import React from 'react';\r\n\r\nimport styles from './cambackdrop.module.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nclass CamBackDrop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stream: '',\r\n            facingMode: 'user',\r\n            capture: null,\r\n            captureURL: ''\r\n        };\r\n\r\n        this.player = React.createRef();\r\n        this.canvas = React.createRef();\r\n\r\n        this.getCamera = this.getCamera.bind(this);\r\n        this.reverseCamera = this.reverseCamera.bind(this);\r\n        this.captureCamera = this.captureCamera.bind(this);\r\n        this.offCamera = this.offCamera.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.offCamera();\r\n    }\r\n\r\n    async getCamera() {\r\n        try {\r\n            let stream = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: { facingMode: this.state.facingMode },\r\n            });\r\n\r\n            this.player.current.srcObject = stream;\r\n\r\n            this.setState({ stream: stream });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async reverseCamera() {\r\n        if (this.state.facingMode === 'user')\r\n            this.setState({ facingMode: { exact: 'environment' } });\r\n        else this.setState({ facingMode: 'user' });\r\n\r\n        try {\r\n            await this.getCamera();\r\n        } catch (err) {\r\n            await this.reverseCamera();\r\n        }\r\n    }\r\n\r\n    async captureCamera() {\r\n        let {width, height} = this.player.current.getBoundingClientRect();\r\n        this.canvas.current.setAttribute('width', width);\r\n        this.canvas.current.setAttribute('height', height);\r\n\r\n        let ctx = this.canvas.current.getContext('2d');\r\n        ctx.drawImage(\r\n            this.player.current,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n\r\n        ctx.scale(1.35, 1);\r\n\r\n        console.log(this.player.current.width);\r\n        /*\r\n        let data = await new Promise(function (resolve, reject) {\r\n            this.canvas.current.toBlob((blob) => resolve(blob));\r\n        }.bind(this))\r\n        \r\n        this.setState({ capture: data, captureURL: URL.createObjectURL(data)});\r\n\r\n        console.log(captureURL);\r\n        */\r\n       this.setState({captureURL: this.canvas.current.toDataURL()});\r\n       console.log(this.state.captureURL);\r\n\r\n    }\r\n\r\n    async offCamera() {\r\n        if (this.state.stream) this.state.stream.getTracks()[0].stop();\r\n        this.setState({ stream: '' });\r\n        this.player.current.srcObject = null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.backdrop}>\r\n                <img src={this.state.capture} />\r\n                <video ref={this.player} autoPlay />\r\n                <canvas ref={this.canvas} />\r\n\r\n                {!this.state.stream ? (\r\n                    <div\r\n                        className={styles.prompt}\r\n                        onClick={() => {\r\n                            this.setState({ facingMode: 'user' });\r\n                            this.getCamera();\r\n                        }}\r\n                    >\r\n                        <h1>Turn on Camera</h1>\r\n                    </div>\r\n                ) : null}\r\n                <div className={styles.controls}>\r\n                    <div>\r\n                        <button onClick={this.offCamera}>\r\n                            <i className=\"fas fa-images\" />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.captureCamera}>\r\n                            <i className=\"far fa-circle\" />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.reverseCamera}>\r\n                            <i className=\"fas fa-sync-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CamBackDrop);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Layout from '../components/layout/layout';\r\nimport Image from '../components/image';\r\nimport SEO from '../components/seo';\r\n\r\nimport CamBackDrop from '../components/cambackdrop/cambackdrop';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../state/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nconst ClipboardPage = ({ changeBG }) => {\r\n    changeBG('black');\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Clipboard\" />\r\n            <CamBackDrop />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ClipboardPage);\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\n\nexport function changeBG(bgColor) {\n    console.log(bgColor);\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        title\r\n                        description\r\n                        author\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n\r\n    const metaDescription = description || site.siteMetadata.description;\r\n\r\n    return (\r\n        <Helmet\r\n            htmlAttributes={{\r\n                lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: metaDescription,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: title,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: metaDescription,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: site.siteMetadata.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: metaDescription,\r\n                },\r\n            ].concat(meta)}\r\n        >\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\r\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\r\n                crossorigin=\"anonymous\"\r\n            />\r\n        </Helmet>\r\n    );\r\n}\r\n\r\nSEO.defaultProps = {\r\n    lang: `en`,\r\n    meta: [],\r\n    description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n    description: PropTypes.string,\r\n    lang: PropTypes.string,\r\n    meta: PropTypes.arrayOf(PropTypes.object),\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nimport styles from './nav.module.scss';\r\n\r\nimport '../styles/hamburgers/hamburgers.scss';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isCollapse: false,\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({ isCollapse: !this.state.isCollapse });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={`${\r\n                        styles.menuToggle\r\n                    } hamburger hamburger--spin ${\r\n                        this.state.isCollapse ? 'is-active' : ''\r\n                    }`}\r\n                    onClick={this.toggleNav}\r\n                    type=\"button\"\r\n                >\r\n                    <span className=\"hamburger-box\">\r\n                        <span\r\n                            className={`hamburger-inner ${\r\n                                this.props.bgColor == 'black'\r\n                                    ? styles.dark\r\n                                    : styles.light\r\n                            }`}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className={`${styles.navContainer} ${\r\n                        this.state.isCollapse ? styles.isActive : ''\r\n                    }`}\r\n                >\r\n                    <div className={styles.nav}>\r\n                        <div className={styles.profile}>\r\n                            <img\r\n                                src={require('../../images/reading-profile.png')}\r\n                            />\r\n                            <h1>Easyread</h1>\r\n                            <p>Welcome back!</p>\r\n                        </div>\r\n                        <hr />\r\n                        <ul className={styles.pages}>\r\n                            {[\r\n                                {\r\n                                    name: 'Clipboard',\r\n                                    url: '/clipboard',\r\n                                },\r\n                                ,\r\n                                {\r\n                                    name: 'Settings',\r\n                                    url: '/settings',\r\n                                },\r\n                                {\r\n                                    name: 'Progress Tracker',\r\n                                    url: '/tracker',\r\n                                },\r\n                            ].map(e => (\r\n                                <li key={e.url}>\r\n                                    <Link\r\n                                        className={styles.page}\r\n                                        activeClassName={styles.pageActive}\r\n                                        to={e.url}\r\n                                    >\r\n                                        <i className=\"fas fa-heart fa-2x\" />\r\n                                        <p>{e.name}</p>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Nav);\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nimport Nav from '../nav/nav';\r\nimport './layout.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nconst Layout = ({ bgColor, changeBG, children }) => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query SiteTitleQuery {\r\n                site {\r\n                    siteMetadata {\r\n                        title\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => (\r\n            <>\r\n                <Nav />\r\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\r\n                    {/*\r\n                   <button onClick={() => changeBG('red')}>red</button>\r\n                    <button onClick={() => changeBG('white')}>white</button>\r\n                   */}\r\n                    <main>{children}</main>\r\n                    <footer />\r\n                </div>\r\n            </>\r\n        )}\r\n    />\r\n);\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n"],"sourceRoot":""}