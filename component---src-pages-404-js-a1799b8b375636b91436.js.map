{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","changeBG","changeReaderBG","changeReaderColor","changeReaderFont","_constants__WEBPACK_IMPORTED_MODULE_0__","store__WEBPACK_IMPORTED_MODULE_1__","bgColor","store","type","consts","readerBgColor","readerColor","readerFont","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","_this","_React$Component","call","this","state","isCollapse","toggleNav","bind","assertThisInitialized_default","setState","_this2","react_default","Fragment","className","styles","menuToggle","onClick","dark","light","navContainer","isActive","nav","profile","src","pages","url","map","e","key","gatsby_browser_entry","page","activeClassName","pageActive","to","Component","connect","dispatch","Layout","style","backgroundColor","_2924840780","node"],"mappings":"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","file":"component---src-pages-404-js-a1799b8b375636b91436.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n    <Layout>\n        <SEO title=\"404: Not found\" />\n        <h1>NOT FOUND</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\r\nimport * as store from 'store';\r\n\r\nexport function changeBG(bgColor) {\r\n    store.set('bgColor', bgColor);\r\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\r\n}\r\n\r\nexport function changeReaderBG(readerBgColor) {\r\n    store.set('readerBgColor', readerBgColor);\r\n    return { type: consts.CHANGE_READER_BG, readerBgColor: readerBgColor };\r\n}\r\n\r\nexport function changeReaderColor(readerColor) {\r\n    store.set('readerColor', readerColor);\r\n    return { type: consts.CHANGE_READER_COLOR, readerColor: readerColor };\r\n}\r\n\r\nexport function changeReaderFont(readerFont) {\r\n    store.set('readerFont', readerFont);\r\n    return { type: consts.CHANGE_READER_FONT, readerFont: readerFont };\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        >\n            <link\n                rel=\"stylesheet\"\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\n                crossorigin=\"anonymous\"\n            />\n        </Helmet>\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nimport styles from './nav.module.scss';\r\n\r\nimport '../styles/hamburgers/hamburgers.scss';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isCollapse: false,\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({ isCollapse: !this.state.isCollapse });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={`${\r\n                        styles.menuToggle\r\n                    } hamburger hamburger--spin ${\r\n                        this.state.isCollapse ? 'is-active' : ''\r\n                    }`}\r\n                    onClick={this.toggleNav}\r\n                    type=\"button\"\r\n                >\r\n                    <span className=\"hamburger-box\">\r\n                        <span\r\n                            className={`hamburger-inner ${\r\n                                this.props.bgColor == 'black'\r\n                                    ? styles.dark\r\n                                    : styles.light\r\n                            }`}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className={`${styles.navContainer} ${\r\n                        this.state.isCollapse ? styles.isActive : ''\r\n                    }`}\r\n                >\r\n                    <div className={styles.nav}>\r\n                        <div className={styles.profile}>\r\n                            <img\r\n                                src={require('../../images/reading-profile.png')}\r\n                            />\r\n                            <h1>Easyread</h1>\r\n                            <p>Welcome back!</p>\r\n                        </div>\r\n                        <hr />\r\n                        <ul className={styles.pages}>\r\n                            {[\r\n                                {\r\n                                    name: 'Clipboard',\r\n                                    url: '/clipboard',\r\n                                },\r\n                                {\r\n                                    name: 'Gallery',\r\n                                    url: '/gallery',\r\n                                },\r\n                                {\r\n                                    name: 'Settings',\r\n                                    url: '/settings',\r\n                                },\r\n                                {\r\n                                    name: 'Progress Tracker',\r\n                                    url: '/tracker',\r\n                                },\r\n                            ].map(e => (\r\n                                <li key={e.url} onClick={this.toggleNav}>\r\n                                    <Link\r\n                                        className={styles.page}\r\n                                        activeClassName={styles.pageActive}\r\n                                        to={e.url}\r\n                                    >\r\n                                        <i className=\"fas fa-heart fa-2x\" />\r\n                                        <p>{e.name}</p>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Nav);\r\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Nav from '../nav/nav';\nimport './layout.scss';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst Layout = ({ bgColor, changeBG, children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Nav />\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\n                    {/*\n                   <button onClick={() => changeBG('red')}>red</button>\n                    <button onClick={() => changeBG('white')}>white</button>\n                   */}\n                    <main>{children}</main>\n                    <footer />\n                </div>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}