{"version":3,"sources":["webpack:///./src/components/cambackdrop/cambackdrop.js","webpack:///./src/pages/clipboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js","webpack:///./src/components/textbox/textbox.js"],"names":["localStorage","createLocalStorage","CV_KEY","process","CamBackDrop","props","_this","_React$Component","call","this","state","mediaStream","facingMode","captureURL","textBoxes","recognitionResult","cachedText","renderImage","loading","ctx","width","height","frameCount","loop","init","req","player","React","createRef","canvas","initCanvas","bind","assertThisInitialized_default","initCamera","reverseCamera","offCamera","captureFrame","getCV","genText","captureImage","bounds","current","getBoundingClientRect","setAttribute","getContext","_callee2","stream","_this2","regenerator_default","a","wrap","_context2","prev","next","setState","navigator","mediaDevices","getUserMedia","audio","video","sent","srcObject","Promise","res","rej","setTimeout","setInterval","asyncToGenerator_default","mark","_callee","_context","stop","t0","console","log","_callee3","_context3","_callee4","_context4","clearTimeout","clearInterval","getTracks","_callee5","_context5","drawImage","toDataURL","chunkDataURL","dataURL","data","split","bytes","slice","window","atob","buf","ArrayBuffer","length","byteArr","Uint8Array","i","charCodeAt","_callee7","chunkedData","jobRes","CVRes","_context7","fetch","method","headers","Content-Type","Ocp-Apim-Subscription-Key","body","get","then","_ref2","_callee6","_context6","json","abrupt","_x","apply","arguments","status","_callee8","_this3","_context8","save","lines","forEach","line","text","coords","boundingBox","offset","concat","str","el","react_default","createElement","textbox","key","Math","random","x","y","abs","size","font","readerFont","fillStyle","readerBgColor","fillRect","measureText","readerColor","fillText","t1","t2","t3","restore","_callee9","captures","_context9","pause","JSON","parse","getItem","setItem","stringify","date","Date","now","originalImage","originalDimension","componentWillUnmount","render","_this4","className","styles","backdrop","loader","map","e","ref","autoPlay","style","transform","prompt","onClick","controls","gatsby_browser_entry","to","Component","connect","bgColor","dispatch","changeBG","_ref","layout","seo","title","cambackdrop","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","_constants__WEBPACK_IMPORTED_MODULE_0__","type","consts","m","module","exports","require","default","ProdPageRenderer","location","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","isCollapse","toggleNav","Fragment","menuToggle","dark","light","navContainer","isActive","nav","profile","src","pages","url","page","activeClassName","pageActive","Layout","backgroundColor","_2924840780","node","Textbox","zIndex","position","top","left","margin","fontSize","color","fontFamily"],"mappings":"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","file":"component---src-pages-clipboard-js-e0ed2f17829e3bab97c4.js","sourcesContent":["import React from 'react';\n\nimport styles from './cambackdrop.module.scss';\n\nimport Textbox from '../textbox/textbox';\n\nimport { connect } from 'react-redux';\n\nimport { Link } from 'gatsby';\n\nimport { createLocalStorage } from \"localstorage-ponyfill\";\nconst localStorage = createLocalStorage();\n\nconst CV_BASE =\n    'https://cors-anywhere.herokuapp.com/https://eastus.api.cognitive.microsoft.com/vision/v2.0/recognizeText?mode=Printed';\nconst CV_KEY = process.env.GATSBY_AZURE_API_KEY;\n\nconst mapStateToProps = state => {\n    return {\n        readerBgColor: state.readerBgColor,\n        readerColor: state.readerColor,\n        readerFont: state.readerFont,\n    };\n};\n\nclass CamBackDrop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mediaStream: null,\n            facingMode: 'user',\n            captureURL: '',\n            textBoxes: [],\n            recognitionResult: null,\n            cachedText: '',\n            renderImage: '',\n            loading: false,\n        };\n\n        //temp\n        this.ctx = null;\n        this.width = 0;\n        this.height = 0;\n        this.frameCount = 0;\n\n        this.loop = null;\n        this.init = null;\n        this.req = false;\n\n        //ref\n        this.player = React.createRef();\n        this.canvas = React.createRef();\n\n        //functs\n        this.initCanvas = this.initCanvas.bind(this);\n        this.initCamera = this.initCamera.bind(this);\n        this.reverseCamera = this.reverseCamera.bind(this);\n        this.offCamera = this.offCamera.bind(this);\n        this.captureFrame = this.captureFrame.bind(this);\n        this.getCV = this.getCV.bind(this);\n        this.genText = this.genText.bind(this);\n        this.captureImage = this.captureImage.bind(this);\n    }\n\n    //init dimensions and context\n    initCanvas() {\n        let bounds = this.player.current.getBoundingClientRect();\n        this.width = bounds.width;\n        this.height = bounds.height;\n        this.canvas.current.setAttribute('width', this.width);\n        this.canvas.current.setAttribute('height', this.height);\n        this.ctx = this.canvas.current.getContext('2d');\n    }\n\n    //get media and setup canvas\n    async initCamera() {\n        //reset textboxes and cache\n        this.setState({ textBoxes: [], cachedText: '' });\n\n        try {\n            let stream = await navigator.mediaDevices.getUserMedia({\n                audio: false,\n                video: { facingMode: this.state.facingMode },\n            });\n\n            this.player.current.srcObject = stream;\n            this.setState({ mediaStream: stream });\n\n            //init canvas\n            await new Promise((res, rej) => {\n                this.setState({ loading: true });\n                this.init = setTimeout(() => {\n                    this.initCanvas();\n                    this.setState({ loading: false });\n                    res();\n                }, 1000);\n            });\n            //init capture\n            this.loop = setInterval(async () => {\n                if (!this.req) {\n                    this.req = true;\n                    await this.captureFrame();\n                    await this.getCV();\n                    await this.genText();\n                    this.req = false;\n                }\n            }, 250);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async reverseCamera() {\n        this.setState({\n            facingMode:\n                this.state.facingMode === 'user' ? 'environment' : 'user',\n        });\n\n        await this.offCamera();\n\n        //attempt reverse\n        try {\n            await this.initCamera();\n        } catch (err) {\n            await this.reverseCamera();\n        }\n    }\n\n    async offCamera() {\n        clearTimeout(this.init);\n        clearInterval(this.loop);\n\n        if (this.state.mediaStream)\n            await this.state.mediaStream.getTracks()[0].stop();\n\n        this.setState({ mediaStream: null });\n        //this.player.current.srcObject = null;\n    }\n\n    //capture frames and run analysis\n    async captureFrame() {\n        this.ctx.drawImage(this.player.current, 0, 0);\n\n        let captureURL = await this.canvas.current.toDataURL('image/jpeg');\n        this.setState({ captureURL: captureURL });\n\n        this.frameCount++;\n    }\n\n    //chunks data url for payloading\n    chunkDataURL(dataURL) {\n        let data = dataURL.split(',')[1];\n        let mimeType = dataURL.split(';')[0].slice(5);\n\n        let bytes = window.atob(data);\n        let buf = new ArrayBuffer(bytes.length);\n        let byteArr = new Uint8Array(buf);\n\n        for (let i = 0; i < bytes.length; i++) {\n            byteArr[i] = bytes.charCodeAt(i);\n        }\n\n        return byteArr;\n    }\n\n    //chain 2 requests to get analysis\n    async getCV() {\n        let chunkedData = this.chunkDataURL(this.state.captureURL);\n\n        let jobRes = await fetch(CV_BASE, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/octet-stream',\n                'Ocp-Apim-Subscription-Key': CV_KEY,\n            },\n            body: chunkedData,\n        });\n\n        let CVRes;\n        do {\n            CVRes = await fetch(jobRes.headers.get('Operation-Location'), {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Ocp-Apim-Subscription-Key': CV_KEY,\n                },\n            }).then(async res => await res.json());\n        } while (CVRes.status != 'Succeeded');\n        console.log(CVRes);\n        this.setState({\n            recognitionResult: CVRes.recognitionResult,\n        });\n    }\n\n    //generate textboxes, render image and cache text\n    async genText() {\n        //clear textboxes and text\n        this.setState({ textBoxes: [], cachedText: '' });\n\n        this.ctx.save();\n\n        let cachedText = '';\n        this.state.recognitionResult.lines.forEach(line => {\n            cachedText += line.text + '\\n';\n            let coords = line.boundingBox;\n\n            let offset = this.canvas.current.getBoundingClientRect();\n\n            this.setState({\n                textBoxes: this.state.textBoxes.concat([\n                    {\n                        str: line.text,\n                        el: (\n                            <Textbox\n                                key={line.text + Math.random()}\n                                x={coords[6] + offset.x}\n                                y={\n                                    coords[7] +\n                                    offset.y -\n                                    Math.abs(coords[1] - coords[7])\n                                }\n                                text={line.text}\n                                size={Math.abs(coords[1] - coords[7])}\n                            />\n                        ),\n                    },\n                ]),\n            });\n\n            this.ctx.font = `${Math.abs(coords[1] - coords[7])}px ${\n                this.props.readerFont\n            }`;\n            this.ctx.fillStyle = this.props.readerBgColor;\n            this.ctx.fillRect(\n                coords[0],\n                coords[1],\n                this.ctx.measureText(line.text).width,\n                Math.abs(coords[1] - coords[7])\n            );\n            this.ctx.fillStyle = this.props.readerColor;\n            this.ctx.fillText(line.text, coords[6], coords[7]);\n        });\n        this.setState({\n            cachedText: cachedText,\n            renderImage: await this.canvas.current.toDataURL('image/jpeg'),\n        });\n\n        //restore\n        this.ctx.restore();\n        //this.ctx.drawImage(, 0, 0, this.width, this.height);\n    }\n\n    //captures and writes to image\n    async captureImage() {\n        console.log('Captured!');\n        this.player.current.pause();\n        await this.offCamera();\n\n        //run 1 more time\n        if (this.ctx) {\n            await this.captureFrame();\n            await this.getCV();\n            await this.genText();\n        }\n\n        if (this.state.recognitionResult != null) {\n            let captures = JSON.parse(localStorage.getItem('captures'));\n\n            if (captures == null) {\n                localStorage.setItem(\n                    'captures',\n                    JSON.stringify([\n                        {\n                            date: Date.now(),\n                            recognitionResult: this.state.recognitionResult,\n                            cachedText: this.state.cachedText,\n                            renderImage: this.state.renderImage,\n                            originalImage: this.state.captureURL,\n                            originalDimension: {\n                                width: this.width,\n                                height: this.height,\n                            },\n                        },\n                    ])\n                );\n            } else {\n                localStorage.setItem(\n                    'captures',\n                    JSON.stringify(\n                        captures.concat([\n                            {\n                                date: Date.now(),\n                                recognitionResult: this.state.recognitionResult,\n                                cachedText: this.state.cachedText,\n                                renderImage: this.state.renderImage,\n                                originalImage: this.state.captureURL,\n                                originalDimension: {\n                                    width: this.width,\n                                    height: this.height,\n                                },\n                            },\n                        ])\n                    )\n                );\n            }\n\n            console.log(this.state);\n            console.log(localStorage);\n        }\n    }\n\n    componentWillUnmount() {\n        this.offCamera();\n    }\n\n    render() {\n        return (\n            <div className={styles.backdrop}>\n                {this.state.loading ? (\n                    <div className={styles.loader}>\n                        <h1>Loading...</h1>\n                    </div>\n                ) : null}\n                {this.state.textBoxes.map(e => e.el)}\n                {/*<img src={this.state.captureURL} />*/}\n                {/*rotation only works well for mobile -> todo fix*/}\n                <video\n                    ref={this.player}\n                    autoPlay\n                    style={{\n                        transform: `translate(-50%, -50%) rotateY(${\n                            this.state.facingMode === 'user' && false\n                                ? '180'\n                                : '0'\n                        }deg)`,\n                    }}\n                />\n                <canvas\n                    ref={this.canvas}\n                    style={{ transform: `translate(-50%, -50%)` }}\n                />\n\n                {!this.state.mediaStream ? (\n                    <div\n                        className={styles.prompt}\n                        onClick={() => {\n                            this.setState({ facingMode: 'user' });\n                            this.initCamera();\n                        }}\n                    >\n                        <p>Turn on Camera</p>\n                    </div>\n                ) : null}\n                <div className={styles.controls}>\n                    <div>\n                        <Link to=\"/gallery\">\n                            <button onClick={this.offCamera}>\n                                <i className=\"fas fa-images\" />\n                            </button>\n                        </Link>\n                    </div>\n                    <div>\n                        <button onClick={this.captureImage}>\n                            <i className=\"far fa-circle\" />\n                        </button>\n                    </div>\n                    <div>\n                        <button onClick={this.reverseCamera}>\n                            <i className=\"fas fa-sync-alt\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(CamBackDrop);\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout/layout';\nimport Image from '../components/image';\nimport SEO from '../components/seo';\n\nimport CamBackDrop from '../components/cambackdrop/cambackdrop';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst ClipboardPage = ({ changeBG }) => {\n    changeBG('black');\n    return (\n        <Layout>\n            <SEO title=\"Clipboard\" />\n            <CamBackDrop />\n        </Layout>\n    );\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ClipboardPage);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\n\nexport function changeBG(bgColor) {\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\n}\n\nexport function changeReaderBG(readerBgColor) {\n    return { type: consts.CHANGE_READER_BG, readerBgColor: readerBgColor };\n}\n\nexport function changeReaderColor(readerColor) {\n    return { type: consts.CHANGE_READER_COLOR, readerColor: readerColor };\n}\n\nexport function changeReaderFont(readerFont) {\n    return { type: consts.CHANGE_READER_BG, readerFont: readerFont };\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        >\n            <link\n                rel=\"stylesheet\"\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\n                crossorigin=\"anonymous\"\n            />\n        </Helmet>\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nimport styles from './nav.module.scss';\n\nimport '../styles/hamburgers/hamburgers.scss';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCollapse: false,\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({ isCollapse: !this.state.isCollapse });\n    }\n\n    render() {\n        return (\n            <>\n                <div\n                    className={`${\n                        styles.menuToggle\n                    } hamburger hamburger--spin ${\n                        this.state.isCollapse ? 'is-active' : ''\n                    }`}\n                    onClick={this.toggleNav}\n                    type=\"button\"\n                >\n                    <span className=\"hamburger-box\">\n                        <span\n                            className={`hamburger-inner ${\n                                this.props.bgColor == 'black'\n                                    ? styles.dark\n                                    : styles.light\n                            }`}\n                        />\n                    </span>\n                </div>\n                <div\n                    className={`${styles.navContainer} ${\n                        this.state.isCollapse ? styles.isActive : ''\n                    }`}\n                >\n                    <div className={styles.nav}>\n                        <div className={styles.profile}>\n                            <img\n                                src={require('../../images/reading-profile.png')}\n                            />\n                            <h1>Easyread</h1>\n                            <p>Welcome back!</p>\n                        </div>\n                        <hr />\n                        <ul className={styles.pages}>\n                            {[\n                                {\n                                    name: 'Clipboard',\n                                    url: '/clipboard',\n                                },\n                                {\n                                    name: 'Gallery',\n                                    url: '/gallery',\n                                },\n                                {\n                                    name: 'Settings',\n                                    url: '/settings',\n                                },\n                                {\n                                    name: 'Progress Tracker',\n                                    url: '/tracker',\n                                },\n                            ].map(e => (\n                                <li key={e.url}>\n                                    <Link\n                                        className={styles.page}\n                                        activeClassName={styles.pageActive}\n                                        to={e.url}\n                                    >\n                                        <i className=\"fas fa-heart fa-2x\" />\n                                        <p>{e.name}</p>\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Nav);\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Nav from '../nav/nav';\nimport './layout.scss';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst Layout = ({ bgColor, changeBG, children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Nav />\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\n                    {/*\n                   <button onClick={() => changeBG('red')}>red</button>\n                    <button onClick={() => changeBG('white')}>white</button>\n                   */}\n                    <main>{children}</main>\n                    <footer />\n                </div>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Layout);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        readerBgColor: state.readerBgColor,\n        readerColor: state.readerColor,\n        readerFont: state.readerFont,\n    };\n};\n\nclass Textbox extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    backgroundColor: this.props.readerBgColor,\n                    zIndex: '1000',\n                    position: 'fixed',\n                    top: this.props.y,\n                    left: this.props.x,\n                }}\n            >\n                <h1\n                    style={{\n                        margin: 0,\n                        fontSize: this.props.size,\n                        color: this.props.readerColor,\n                        fontFamily: this.props.readerFont,\n                    }}\n                >\n                    {this.props.text}\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Textbox);\n"],"sourceRoot":""}