{"version":3,"sources":["webpack:///./src/components/cambackdrop/cambackdrop.js","webpack:///./src/pages/clipboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js","webpack:///./src/components/textbox/textbox.js"],"names":["CV_KEY","process","CamBackDrop","props","_this","_React$Component","call","this","state","mediaStream","facingMode","captureURL","textBoxes","recognitionResult","cachedText","renderImage","loading","ctx","width","height","frameCount","loop","init","req","player","React","createRef","canvas","initCanvas","bind","assertThisInitialized_default","initCamera","reverseCamera","offCamera","captureFrame","getCV","genText","captureImage","bounds","current","getBoundingClientRect","setAttribute","getContext","_callee2","stream","_this2","regenerator_default","a","wrap","_context2","prev","next","setState","navigator","mediaDevices","getUserMedia","audio","video","sent","srcObject","Promise","res","rej","setTimeout","setInterval","asyncToGenerator_default","mark","_callee","_context","stop","t0","console","log","_callee3","_context3","_callee4","_context4","clearTimeout","clearInterval","getTracks","_callee5","_context5","drawImage","toDataURL","chunkDataURL","dataURL","data","split","bytes","slice","window","atob","buf","ArrayBuffer","length","byteArr","Uint8Array","i","charCodeAt","_callee7","chunkedData","jobRes","CVRes","_context7","fetch","method","headers","Content-Type","Ocp-Apim-Subscription-Key","body","get","then","_ref2","_callee6","_context6","json","abrupt","_x","apply","arguments","status","_callee8","_this3","_context8","save","lines","forEach","line","text","words","word","coords","boundingBox","offset","rgb","getImageData","concat","str","el","react_default","createElement","textbox","key","Math","random","x","y","abs","size","color","font","readerFont","fillStyle","fillRect","measureText","readerColor","fillText","t1","t2","t3","restore","_callee9","captures","_context9","pause","store","date","Date","now","originalImage","originalDimension","componentWillUnmount","render","_this4","className","styles","backdrop","loader","map","e","ref","autoPlay","playsInline","muted","style","transform","prompt","onClick","controls","gatsby_browser_entry","to","Component","connect","readerBgColor","bgColor","dispatch","changeBG","_ref","layout","seo","title","cambackdrop","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","changeReaderBG","changeReaderColor","changeReaderFont","_constants__WEBPACK_IMPORTED_MODULE_0__","store__WEBPACK_IMPORTED_MODULE_1__","type","consts","m","module","exports","require","default","ProdPageRenderer","location","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","isCollapse","toggleNav","Fragment","menuToggle","dark","light","navContainer","isActive","nav","profile","src","pages","url","page","activeClassName","pageActive","Layout","backgroundColor","_2924840780","node","Textbox","zIndex","position","top","left","margin","fontSize","floor","fontFamily"],"mappings":"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","file":"component---src-pages-clipboard-js-855ae1c9c574ac853b12.js","sourcesContent":["import React from 'react';\r\n\r\nimport styles from './cambackdrop.module.scss';\r\n\r\nimport Textbox from '../textbox/textbox';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as store from 'store';\r\n\r\nconst CV_BASE =\r\n    'https://cors-anywhere.herokuapp.com/https://eastus.api.cognitive.microsoft.com/vision/v2.0/recognizeText?mode=Printed';\r\nconst CV_KEY = process.env.GATSBY_AZURE_API_KEY;\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        readerBgColor: state.readerBgColor,\r\n        readerColor: state.readerColor,\r\n        readerFont: state.readerFont,\r\n    };\r\n};\r\n\r\nclass CamBackDrop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mediaStream: null,\r\n            facingMode: 'user',\r\n            captureURL: '',\r\n            textBoxes: [],\r\n            recognitionResult: null,\r\n            cachedText: '',\r\n            renderImage: '',\r\n            loading: false,\r\n        };\r\n\r\n        //temp\r\n        this.ctx = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.frameCount = 0;\r\n\r\n        this.loop = null;\r\n        this.init = null;\r\n        this.req = false;\r\n\r\n        //ref\r\n        this.player = React.createRef();\r\n        this.canvas = React.createRef();\r\n\r\n        //functs\r\n        this.initCanvas = this.initCanvas.bind(this);\r\n        this.initCamera = this.initCamera.bind(this);\r\n        this.reverseCamera = this.reverseCamera.bind(this);\r\n        this.offCamera = this.offCamera.bind(this);\r\n        this.captureFrame = this.captureFrame.bind(this);\r\n        this.getCV = this.getCV.bind(this);\r\n        this.genText = this.genText.bind(this);\r\n        this.captureImage = this.captureImage.bind(this);\r\n    }\r\n\r\n    //init dimensions and context\r\n    initCanvas() {\r\n        let bounds = this.player.current.getBoundingClientRect();\r\n        this.width = bounds.width;\r\n        this.height = bounds.height;\r\n        this.canvas.current.setAttribute('width', this.width);\r\n        this.canvas.current.setAttribute('height', this.height);\r\n        this.ctx = this.canvas.current.getContext('2d');\r\n    }\r\n\r\n    //get media and setup canvas\r\n    async initCamera() {\r\n        //reset textboxes and cache\r\n        this.setState({ textBoxes: [], cachedText: '' });\r\n\r\n        try {\r\n            let stream = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: { facingMode: this.state.facingMode },\r\n            });\r\n\r\n            this.player.current.srcObject = stream;\r\n            this.setState({ mediaStream: stream });\r\n\r\n            //init canvas\r\n            await new Promise((res, rej) => {\r\n                this.setState({ loading: true });\r\n                this.init = setTimeout(() => {\r\n                    this.initCanvas();\r\n                    this.setState({ loading: false });\r\n                    res();\r\n                }, 1000);\r\n            });\r\n            //init capture\r\n            this.loop = setInterval(async () => {\r\n                if (!this.req) {\r\n                    this.req = true;\r\n                    await this.captureFrame();\r\n                    await this.getCV();\r\n                    await this.genText();\r\n                    this.req = false;\r\n                }\r\n            }, 100);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async reverseCamera() {\r\n        this.setState({\r\n            facingMode:\r\n                this.state.facingMode === 'user' ? 'environment' : 'user',\r\n        });\r\n\r\n        await this.offCamera();\r\n\r\n        //attempt reverse\r\n        try {\r\n            await this.initCamera();\r\n        } catch (err) {\r\n            await this.reverseCamera();\r\n        }\r\n    }\r\n\r\n    async offCamera() {\r\n        clearTimeout(this.init);\r\n        clearInterval(this.loop);\r\n\r\n        if (this.state.mediaStream)\r\n            await this.state.mediaStream.getTracks()[0].stop();\r\n\r\n        this.setState({ mediaStream: null });\r\n        //this.player.current.srcObject = null;\r\n    }\r\n\r\n    //capture frames and run analysis\r\n    async captureFrame() {\r\n        this.ctx.drawImage(this.player.current, 0, 0);\r\n\r\n        let captureURL = await this.canvas.current.toDataURL('image/jpeg');\r\n        this.setState({ captureURL: captureURL });\r\n\r\n        this.frameCount++;\r\n    }\r\n\r\n    //chunks data url for payloading\r\n    chunkDataURL(dataURL) {\r\n        let data = dataURL.split(',')[1];\r\n        let mimeType = dataURL.split(';')[0].slice(5);\r\n\r\n        let bytes = window.atob(data);\r\n        let buf = new ArrayBuffer(bytes.length);\r\n        let byteArr = new Uint8Array(buf);\r\n\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            byteArr[i] = bytes.charCodeAt(i);\r\n        }\r\n\r\n        return byteArr;\r\n    }\r\n\r\n    //chain 2 requests to get analysis\r\n    async getCV() {\r\n        let chunkedData = this.chunkDataURL(this.state.captureURL);\r\n\r\n        let jobRes = await fetch(CV_BASE, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Ocp-Apim-Subscription-Key': CV_KEY,\r\n            },\r\n            body: chunkedData,\r\n        });\r\n\r\n        let CVRes;\r\n        do {\r\n            CVRes = await fetch(jobRes.headers.get('Operation-Location'), {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Ocp-Apim-Subscription-Key': CV_KEY,\r\n                },\r\n            }).then(async res => await res.json());\r\n        } while (CVRes.status != 'Succeeded');\r\n        console.log(CVRes);\r\n        this.setState({\r\n            recognitionResult: CVRes.recognitionResult,\r\n        });\r\n    }\r\n\r\n    //generate textboxes, render image and cache text\r\n    async genText() {\r\n        //clear textboxes and text\r\n        this.setState({ textBoxes: [], cachedText: '' });\r\n\r\n        this.ctx.save();\r\n\r\n        let cachedText = '';\r\n        this.state.recognitionResult.lines.forEach(line => {\r\n            cachedText += line.text + '\\n';\r\n\r\n            line.words.forEach(word => {\r\n                let coords = word.boundingBox;\r\n\r\n                let offset = this.canvas.current.getBoundingClientRect();\r\n\r\n                //color\r\n                let rgb = this.ctx.getImageData(coords[0], coords[1], 1, 1).data;\r\n\r\n                this.setState({\r\n                    textBoxes: this.state.textBoxes.concat([\r\n                        {\r\n                            str: word.text,\r\n                            el: (\r\n                                <Textbox\r\n                                    key={word.text + Math.random()}\r\n                                    x={coords[6] + offset.x}\r\n                                    y={\r\n                                        coords[7] +\r\n                                        offset.y -\r\n                                        Math.abs(coords[1] - coords[7])\r\n                                    }\r\n                                    text={word.text}\r\n                                    size={Math.abs(coords[1] - coords[7])}\r\n                                    color={rgb}\r\n                                />\r\n                            ),\r\n                        },\r\n                    ]),\r\n                });\r\n\r\n                this.ctx.font = `${Math.abs(coords[1] - coords[7])}px ${\r\n                    this.props.readerFont\r\n                    }`;\r\n\r\n                this.ctx.fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`//this.props.readerBgColor;\r\n                this.ctx.fillRect(\r\n                    coords[0],\r\n                    coords[1],\r\n                    this.ctx.measureText(word.text).width,\r\n                    Math.abs(coords[1] - coords[7])\r\n                );\r\n                this.ctx.fillStyle = this.props.readerColor;\r\n                this.ctx.fillText(word.text, coords[6], coords[7]);\r\n            });\r\n        });\r\n        this.setState({\r\n            cachedText: cachedText,\r\n            renderImage: await this.canvas.current.toDataURL('image/jpeg'),\r\n        });\r\n\r\n        //restore\r\n        this.ctx.restore();\r\n        //this.ctx.drawImage(, 0, 0, this.width, this.height);\r\n    }\r\n\r\n    //captures and writes to image\r\n    async captureImage() {\r\n        console.log('Captured!');\r\n        this.player.current.pause();\r\n        await this.offCamera();\r\n\r\n        //run 1 more time\r\n        if (this.ctx) {\r\n            await this.captureFrame();\r\n            await this.getCV();\r\n            await this.genText();\r\n        }\r\n\r\n        if (this.state.recognitionResult != null) {\r\n            let captures = store.get('captures');\r\n\r\n            if (captures == null) {\r\n                store.set('captures', [\r\n                    {\r\n                        date: Date.now(),\r\n                        recognitionResult: this.state.recognitionResult,\r\n                        cachedText: this.state.cachedText,\r\n                        renderImage: this.state.renderImage,\r\n                        originalImage: this.state.captureURL,\r\n                        originalDimension: {\r\n                            width: this.width,\r\n                            height: this.height,\r\n                        },\r\n                    },\r\n                ])\r\n            } else {\r\n                store.set('captures', captures.concat([\r\n                    {\r\n                        date: Date.now(),\r\n                        recognitionResult: this.state.recognitionResult,\r\n                        cachedText: this.state.cachedText,\r\n                        renderImage: this.state.renderImage,\r\n                        originalImage: this.state.captureURL,\r\n                        originalDimension: {\r\n                            width: this.width,\r\n                            height: this.height,\r\n                        },\r\n                    },\r\n                ]));\r\n            }\r\n\r\n            console.log(this.state);\r\n            console.log(store.get('captures'));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.offCamera();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.backdrop}>\r\n                {this.state.loading ? (\r\n                    <div className={styles.loader}>\r\n                        <h1>Loading...</h1>\r\n                    </div>\r\n                ) : null}\r\n                {this.state.textBoxes.map(e => e.el)}\r\n                {/*<img src={this.state.captureURL} />*/}\r\n                {/*rotation only works well for mobile -> todo fix*/}\r\n                <video\r\n                    ref={this.player}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted\r\n                    style={{\r\n                        transform: `translate(-50%, -50%) rotateY(${\r\n                            this.state.facingMode === 'user' && false\r\n                                ? '180'\r\n                                : '0'\r\n                            }deg)`,\r\n                    }}\r\n                />\r\n                <canvas\r\n                    ref={this.canvas}\r\n                    style={{ transform: `translate(-50%, -50%)` }}\r\n                />\r\n\r\n                {!this.state.mediaStream ? (\r\n                    <div\r\n                        className={styles.prompt}\r\n                        onClick={() => {\r\n                            this.setState({ facingMode: 'user' });\r\n                            this.initCamera();\r\n                        }}\r\n                    >\r\n                        <p>Turn on Camera</p>\r\n                    </div>\r\n                ) : null}\r\n                <div className={styles.controls}>\r\n                    <div>\r\n                        <Link to=\"/gallery\">\r\n                            <button onClick={this.offCamera}>\r\n                                <i className=\"fas fa-images\" />\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.captureImage}>\r\n                            <i className=\"far fa-circle\" />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.reverseCamera}>\r\n                            <i className=\"fas fa-sync-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(CamBackDrop);\r\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout/layout';\nimport Image from '../components/image';\nimport SEO from '../components/seo';\n\nimport CamBackDrop from '../components/cambackdrop/cambackdrop';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst ClipboardPage = ({ changeBG }) => {\n    changeBG('black');\n    return (\n        <Layout>\n            <SEO title=\"Clipboard\" />\n            <CamBackDrop />\n        </Layout>\n    );\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ClipboardPage);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\r\nimport * as store from 'store';\r\n\r\nexport function changeBG(bgColor) {\r\n    store.set('bgColor', bgColor);\r\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\r\n}\r\n\r\nexport function changeReaderBG(readerBgColor) {\r\n    store.set('readerBgColor', readerBgColor);\r\n    return { type: consts.CHANGE_READER_BG, readerBgColor: readerBgColor };\r\n}\r\n\r\nexport function changeReaderColor(readerColor) {\r\n    store.set('readerColor', readerColor);\r\n    return { type: consts.CHANGE_READER_COLOR, readerColor: readerColor };\r\n}\r\n\r\nexport function changeReaderFont(readerFont) {\r\n    store.set('readerFont', readerFont);\r\n    return { type: consts.CHANGE_READER_FONT, readerFont: readerFont };\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        >\n            <link\n                rel=\"stylesheet\"\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\n                crossorigin=\"anonymous\"\n            />\n        </Helmet>\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nimport styles from './nav.module.scss';\r\n\r\nimport '../styles/hamburgers/hamburgers.scss';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isCollapse: false,\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({ isCollapse: !this.state.isCollapse });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={`${\r\n                        styles.menuToggle\r\n                    } hamburger hamburger--spin ${\r\n                        this.state.isCollapse ? 'is-active' : ''\r\n                    }`}\r\n                    onClick={this.toggleNav}\r\n                    type=\"button\"\r\n                >\r\n                    <span className=\"hamburger-box\">\r\n                        <span\r\n                            className={`hamburger-inner ${\r\n                                this.props.bgColor == 'black'\r\n                                    ? styles.dark\r\n                                    : styles.light\r\n                            }`}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className={`${styles.navContainer} ${\r\n                        this.state.isCollapse ? styles.isActive : ''\r\n                    }`}\r\n                >\r\n                    <div className={styles.nav}>\r\n                        <div className={styles.profile}>\r\n                            <img\r\n                                src={require('../../images/reading-profile.png')}\r\n                            />\r\n                            <h1>Easyread</h1>\r\n                            <p>Welcome back!</p>\r\n                        </div>\r\n                        <hr />\r\n                        <ul className={styles.pages}>\r\n                            {[\r\n                                {\r\n                                    name: 'Clipboard',\r\n                                    url: '/clipboard',\r\n                                },\r\n                                {\r\n                                    name: 'Gallery',\r\n                                    url: '/gallery',\r\n                                },\r\n                                {\r\n                                    name: 'Settings',\r\n                                    url: '/settings',\r\n                                },\r\n                                {\r\n                                    name: 'Progress Tracker',\r\n                                    url: '/tracker',\r\n                                },\r\n                            ].map(e => (\r\n                                <li key={e.url} onClick={this.toggleNav}>\r\n                                    <Link\r\n                                        className={styles.page}\r\n                                        activeClassName={styles.pageActive}\r\n                                        to={e.url}\r\n                                    >\r\n                                        <i className=\"fas fa-heart fa-2x\" />\r\n                                        <p>{e.name}</p>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Nav);\r\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Nav from '../nav/nav';\nimport './layout.scss';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst Layout = ({ bgColor, changeBG, children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Nav />\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\n                    {/*\n                   <button onClick={() => changeBG('red')}>red</button>\n                    <button onClick={() => changeBG('white')}>white</button>\n                   */}\n                    <main>{children}</main>\n                    <footer />\n                </div>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Layout);\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        readerBgColor: state.readerBgColor,\r\n        readerColor: state.readerColor,\r\n        readerFont: state.readerFont,\r\n    };\r\n};\r\n\r\nclass Textbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    backgroundColor: (this.props.color && this.props.readerBgColor == 'blend') ?  `rgb(${this.props.color[0]}, ${this.props.color[1]}, ${this.props.color[2]})` : this.props.readerBgColor,\r\n                    zIndex: '1',\r\n                    position: 'fixed',\r\n                    top: this.props.y,\r\n                    left: this.props.x,\r\n                }}\r\n            >\r\n                <h1\r\n                    style={{\r\n                        margin: 0,\r\n                        fontSize: this.props.size,\r\n                        color: (this.props.color && this.props.readerColor == 'blend') ? `rgb(${Math.floor(255 - this.props.color[0])}, ${Math.floor(255-this.props.color[1])}, ${Math.floor(255-this.props.color[2])})` : this.props.readerColor,\r\n                        fontFamily: this.props.readerFont,\r\n                    }}\r\n                >\r\n                    {this.props.text}\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Textbox);\r\n"],"sourceRoot":""}