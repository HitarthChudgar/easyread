{"version":3,"sources":["webpack:///./src/components/textbox/textbox.js","webpack:///./src/components/cambackdrop/cambackdrop.js","webpack:///./src/pages/clipboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js"],"names":["Textbox","props","_React$Component","call","this","render","react_default","a","createElement","style","backgroundColor","readerBgColor","zIndex","position","top","y","left","x","margin","fontSize","size","color","readerColor","fontFamily","readerFont","text","React","Component","connect","state","CamBackDrop","_this","stream","facingMode","capture","captureURL","textBoxes","player","createRef","canvas","getCamera","bind","assertThisInitialized_default","reverseCamera","captureCamera","offCamera","getCV","init","frameCount","textGroup","componentDidMount","_this$player$current$","current","getBoundingClientRect","width","height","setAttribute","ctx","getContext","globalCompositeOperation","componentWillUnmount","_callee","regenerator_default","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","audio","video","sent","srcObject","setState","setTimeout","setInterval","t0","console","log","stop","_callee2","_context2","checkMoved","imageData","imageScore","i","data","length","_callee3","imgData","_context3","drawImage","getImageData","toDataURL","_callee4","_context4","getTracks","_callee5","key","params","bytes","buf","byteArr","res","loc","result","cachedText","_loop","_i","_this2","_context5","process","mode","Object","keys","forEach","k","split","slice","window","atob","ArrayBuffer","Uint8Array","charCodeAt","fetch","method","headers","Content-Type","Ocp-Apim-Subscription-Key","body","get","json","status","recognitionResult","line","lines","indexOf","t","str","includes","coords","boundingBox","offset","concat","el","textbox","Math","abs","_this3","className","styles","backdrop","map","e","ref","autoPlay","transform","prompt","onClick","controls","dispatch","changeReaderBG","bgColor","changeBG","_ref","layout","seo","title","cambackdrop","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","_constants__WEBPACK_IMPORTED_MODULE_0__","type","consts","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","isCollapse","toggleNav","Fragment","menuToggle","dark","light","navContainer","isActive","nav","profile","src","pages","url","gatsby_browser_entry","page","activeClassName","pageActive","to","Layout","_2924840780","node"],"mappings":"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","file":"component---src-pages-clipboard-js-5fe5ccea9c365bf76da1.js","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        readerBgColor: state.readerBgColor,\n        readerColor: state.readerColor,\n        readerFont: state.readerFont,\n    };\n};\n\nclass Textbox extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    backgroundColor: this.props.readerBgColor,\n                    zIndex: '1000',\n                    position: 'fixed',\n                    top: this.props.y,\n                    left: this.props.x,\n                }}\n            >\n                <h1\n                    style={{\n                        margin: 0,\n                        fontSize: this.props.size,\n                        color: this.props.readerColor,\n                        fontFamily: this.props.readerFont,\n                    }}\n                >\n                    {this.props.text}\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Textbox);\n","import React from 'react';\n\nimport styles from './cambackdrop.module.scss';\n\nimport { connect } from 'react-redux';\n\nimport { changeReaderBG, changeReaderColor } from '../../state/actions';\n\nimport Textbox from '../textbox/textbox';\n\nimport * as strSimilarity from 'string-similarity';\n\nconst mapStateToProps = state => {\n    return {\n        readerBgColor: state.readerBgColor,\n        readerColor: state.readerColor,\n        readerFont: state.readerFont,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeReaderBG: readerBgColor =>\n            dispatch(changeReaderBG(readerBgColor)),\n    };\n};\n\nclass CamBackDrop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: '',\n            facingMode: 'user',\n            capture: null,\n            captureURL: '',\n            textBoxes: [],\n        };\n\n        this.player = React.createRef();\n        this.canvas = React.createRef();\n\n        this.getCamera = this.getCamera.bind(this);\n        this.reverseCamera = this.reverseCamera.bind(this);\n        this.captureCamera = this.captureCamera.bind(this);\n        this.offCamera = this.offCamera.bind(this);\n        this.getCV = this.getCV.bind(this);\n        this.init = this.init.bind(this);\n\n        this.frameCount = 0;\n        this.textGroup = '';\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n    init() {\n        let { width, height } = this.player.current.getBoundingClientRect();\n        this.width = width;\n        this.height = height;\n        this.canvas.current.setAttribute('width', width);\n        this.canvas.current.setAttribute('height', height);\n        this.ctx = this.canvas.current.getContext('2d');\n        this.ctx.globalCompositeOperation = 'difference';\n    }\n\n    componentWillUnmount() {\n        this.offCamera();\n    }\n\n    async getCamera() {\n        try {\n            let stream = await navigator.mediaDevices.getUserMedia({\n                audio: false,\n                video: { facingMode: this.state.facingMode },\n            });\n\n            this.player.current.srcObject = stream;\n\n            this.setState({ stream: stream });\n\n            await setTimeout(this.init, 1000);\n            setInterval(this.captureCamera, 250);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async reverseCamera() {\n        if (this.state.facingMode === 'user')\n            this.setState({ facingMode: 'environment' });\n        else this.setState({ facingMode: 'user' });\n\n        console.log(this.state.facingMode);\n\n        await this.offCamera();\n\n        try {\n            await this.getCamera();\n        } catch (err) {\n            await this.reverseCamera();\n        }\n    }\n\n    checkMoved(imageData) {\n        let imageScore = 0;\n        for (let i = 0; i < imageData.data.length; i += 4) {\n            let r = imageData.data[i] / 3;\n            let g = imageData.data[i + 1] / 3;\n            let b = imageData.data[i + 2] / 3;\n            let pixelScore = r + g + b;\n\n            if (pixelScore >= 32) imageScore++;\n        }\n        //console.log(imageScore);\n        if (imageScore >= 30000) return true;\n\n        return false;\n    }\n\n    async captureCamera() {\n        if (this.frameCount % 2 == 0) {\n            this.ctx.globalCompositeOperation = 'difference';\n        } else this.ctx.globalCompositeOperation = 'source-over';\n\n        //console.log(this.player.current.getBoundingClientRect());\n        //dtx.drawImage(this.state.captureURL, 0, 0);\n        //clear stuff\n        //this.ctx.clearRect(0, 0, this.width, this.height);\n        this.ctx.drawImage(this.player.current, 0, 0);\n        //this.ctx.globalCompositeOperation = 'source-over';\n\n        /*\n        let dtx = this.diff.current.getContext('2d');\n        dtx.globalCompositeOperation = 'difference';\n        dtx.drawImage(this.player.current, 0, 0);\n        */\n        //console.log(this.player.current.width);\n        /*\n        let data = await new Promise(function (resolve, reject) {\n            this.canvas.current.toBlob((blob) => resolve(blob));\n        }.bind(this))\n        \n        this.setState({ capture: data, captureURL: URL.createObjectURL(data)});\n\n        console.log(captureURL);\n        */\n        /*\n         let dtx = this.diff.current.getContext('2d');\n         dtx.globalCompositeOperation = 'difference';\n         if(this.state.captureURL) {\n             console.log(this.state.captureURL);\n             //dtx.drawImage(this.state.captureURL, 0, 0);\n         }*/\n\n        //console.log(this.state);\n\n        let imgData = await this.ctx.getImageData(\n            0,\n            0,\n            this.width,\n            this.height\n        );\n        if (this.checkMoved(imgData) && this.frameCount % 2 != 0) {\n            //console.log(\"moved!\");\n            let data = await this.canvas.current.toDataURL('image/jpeg');\n            this.setState({ captureURL: data });\n            await this.getCV();\n        } //else\n        //console.log(\"not moving!\");\n\n        this.frameCount++;\n    }\n\n    async offCamera() {\n        if (this.state.stream) this.state.stream.getTracks()[0].stop();\n        this.setState({ stream: '' });\n        this.player.current.srcObject = null;\n    }\n\n    async getCV() {\n        //console.log(this.textGroup);\n        let key = process.env.GATSBY_AZURE_API_KEY;\n        let base = `https://cors-anywhere.herokuapp.com/https://eastus.api.cognitive.microsoft.com/vision/v2.0/recognizeText?mode=Printed`;\n        let params = {\n            //\"visualFeatures\": \"Categories,Description,Color\",\n            // \"details\": \"\",\n            mode: 'Printed',\n        };\n\n        let strParams = '?';\n        Object.keys(params).forEach(k => {\n            strParams += `${k}=${params[k]}&`;\n        });\n\n        //console.log(strParams);\n\n        //turn image into arr\n        let data = this.state.captureURL.split(',')[1];\n        let mimeType = this.state.captureURL.split(';')[0].slice(5);\n\n        let bytes = window.atob(data);\n        let buf = new ArrayBuffer(bytes.length);\n        let byteArr = new Uint8Array(buf);\n\n        for (let i = 0; i < bytes.length; i++) {\n            byteArr[i] = bytes.charCodeAt(i);\n        }\n\n        let res = await fetch(base /*+ strParams*/, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/octet-stream',\n                'Ocp-Apim-Subscription-Key': key,\n            },\n            //data: this.state.captureURL,\n            body: byteArr,\n        });\n\n        let loc = 'https://cors-anywhere.herokuapp.com/'+res.headers.get('Operation-Location');\n        let result;\n        do {\n            result = await fetch(loc, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Ocp-Apim-Subscription-Key': key,\n                },\n            });\n\n            result = await result.json();\n            //console.log(result.status);\n        } while (result.status != 'Succeeded');\n\n        //console.log(result);\n\n        //draw boxes\n        let ctx = this.canvas.current.getContext('2d');\n        let cachedText = '';\n        if (result && result.recognitionResult) {\n            this.setState({ textBoxes: [] });\n\n            for (let i = 0; i < result.recognitionResult.lines.length; i++) {\n                let line = result.recognitionResult.lines[i];\n\n                //check if exists\n                let trans = this.state.textBoxes.indexOf(function(t) {\n                    return t.str.includes(line.text);\n                });\n                //if (trans != 0) {\n\n                //    continue;\n                //}\n\n                cachedText += line.text;\n\n                let coords = line.boundingBox;\n\n                let offset = this.canvas.current.getBoundingClientRect();\n                this.setState({\n                    textBoxes: this.state.textBoxes.concat([\n                        {\n                            str: line.text,\n                            el: (\n                                <Textbox\n                                    key={line.text}\n                                    x={coords[6] + offset.x}\n                                    y={\n                                        coords[7] +\n                                        offset.y -\n                                        Math.abs(coords[1] - coords[7])\n                                    }\n                                    text={line.text}\n                                    size={Math.abs(coords[1] - coords[7])}\n                                />\n                            ),\n                        },\n                    ]),\n                });\n            }\n\n            //if(strSimilarity.compareTwoStrings(cachedText, this.textGroup) >\n            this.textGroup = cachedText;\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.backdrop}>\n                {this.state.textBoxes.map(e => e.el)}\n                {/*<img src={this.state.captureURL} />*/}\n                {/*rotation only works well for mobile -> todo fix*/}\n                <video\n                    ref={this.player}\n                    autoPlay\n                    style={{\n                        transform: `translate(-50%, -50%) rotateY(${\n                            this.state.facingMode === 'user' && false\n                                ? '180'\n                                : '0'\n                        }deg)`,\n                    }}\n                />\n                <canvas\n                    ref={this.canvas}\n                    style={{ transform: `translate(-50%, -50%)` }}\n                />\n\n                {!this.state.stream ? (\n                    <div\n                        className={styles.prompt}\n                        onClick={() => {\n                            this.setState({ facingMode: 'user' });\n                            this.getCamera();\n                        }}\n                    >\n                        <h1>Turn on Camera</h1>\n                    </div>\n                ) : null}\n                <div className={styles.controls}>\n                    <div>\n                        <button onClick={this.offCamera}>\n                            <i className=\"fas fa-images\" />\n                        </button>\n                    </div>\n                    <div>\n                        <button onClick={this.captureCamera}>\n                            <i className=\"far fa-circle\" />\n                        </button>\n                    </div>\n                    <div>\n                        <button onClick={this.reverseCamera}>\n                            <i className=\"fas fa-sync-alt\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CamBackDrop);\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout/layout';\nimport Image from '../components/image';\nimport SEO from '../components/seo';\n\nimport CamBackDrop from '../components/cambackdrop/cambackdrop';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst ClipboardPage = ({ changeBG }) => {\n    changeBG('black');\n    return (\n        <Layout>\n            <SEO title=\"Clipboard\" />\n            <CamBackDrop />\n        </Layout>\n    );\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ClipboardPage);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\n\nexport function changeBG(bgColor) {\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\n}\n\nexport function changeReaderBG(readerBgColor) {\n    return { type: consts.CHANGE_READER_BG, readerBgColor: readerBgColor };\n}\n\nexport function changeReaderColor(readerColor) {\n    return { type: consts.CHANGE_READER_COLOR, readerColor: readerColor };\n}\n\nexport function changeReaderFont(readerFont) {\n    return { type: consts.CHANGE_READER_BG, readerFont: readerFont };\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        >\n            <link\n                rel=\"stylesheet\"\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\n                crossorigin=\"anonymous\"\n            />\n        </Helmet>\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nimport styles from './nav.module.scss';\n\nimport '../styles/hamburgers/hamburgers.scss';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCollapse: false,\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({ isCollapse: !this.state.isCollapse });\n    }\n\n    render() {\n        return (\n            <>\n                <div\n                    className={`${\n                        styles.menuToggle\n                    } hamburger hamburger--spin ${\n                        this.state.isCollapse ? 'is-active' : ''\n                    }`}\n                    onClick={this.toggleNav}\n                    type=\"button\"\n                >\n                    <span className=\"hamburger-box\">\n                        <span\n                            className={`hamburger-inner ${\n                                this.props.bgColor == 'black'\n                                    ? styles.dark\n                                    : styles.light\n                            }`}\n                        />\n                    </span>\n                </div>\n                <div\n                    className={`${styles.navContainer} ${\n                        this.state.isCollapse ? styles.isActive : ''\n                    }`}\n                >\n                    <div className={styles.nav}>\n                        <div className={styles.profile}>\n                            <img\n                                src={require('../../images/reading-profile.png')}\n                            />\n                            <h1>Easyread</h1>\n                            <p>Welcome back!</p>\n                        </div>\n                        <hr />\n                        <ul className={styles.pages}>\n                            {[\n                                {\n                                    name: 'Clipboard',\n                                    url: '/clipboard',\n                                },\n                                ,\n                                {\n                                    name: 'Settings',\n                                    url: '/settings',\n                                },\n                                {\n                                    name: 'Progress Tracker',\n                                    url: '/tracker',\n                                },\n                            ].map(e => (\n                                <li key={e.url}>\n                                    <Link\n                                        className={styles.page}\n                                        activeClassName={styles.pageActive}\n                                        to={e.url}\n                                    >\n                                        <i className=\"fas fa-heart fa-2x\" />\n                                        <p>{e.name}</p>\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Nav);\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Nav from '../nav/nav';\nimport './layout.scss';\n\nimport { connect } from 'react-redux';\n\nimport { changeBG } from '../../state/actions';\n\nconst mapStateToProps = state => {\n    return { bgColor: state.bgColor };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\n    };\n};\n\nconst Layout = ({ bgColor, changeBG, children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Nav />\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\n                    {/*\n                   <button onClick={() => changeBG('red')}>red</button>\n                    <button onClick={() => changeBG('white')}>white</button>\n                   */}\n                    <main>{children}</main>\n                    <footer />\n                </div>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}