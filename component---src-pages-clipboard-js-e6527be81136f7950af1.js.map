{"version":3,"sources":["webpack:///./src/components/textbox/textbox.js","webpack:///./src/components/cambackdrop/cambackdrop.js","webpack:///./src/pages/clipboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/state/actions.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/reading-profile.png","webpack:///./src/components/seo.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/layout/layout.js"],"names":["Textbox","props","_React$Component","call","this","render","react_default","a","createElement","style","backgroundColor","readerBgColor","zIndex","position","top","y","left","x","margin","fontSize","size","color","readerColor","fontFamily","readerFont","text","React","Component","connect","state","CamBackDrop","_this","stream","facingMode","capture","captureURL","textBoxes","player","createRef","canvas","getCamera","bind","assertThisInitialized_default","reverseCamera","captureCamera","offCamera","getCV","init","frameCount","textGroup","componentDidMount","_this$player$current$","current","getBoundingClientRect","width","height","setAttribute","ctx","getContext","globalCompositeOperation","componentWillUnmount","_callee","regenerator_default","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","audio","video","sent","srcObject","setState","setTimeout","setInterval","t0","console","log","stop","_callee2","_context2","checkMoved","imageData","imageScore","i","data","length","_callee3","imgData","_context3","drawImage","getImageData","toDataURL","_callee4","_context4","getTracks","_callee5","key","params","bytes","buf","byteArr","res","loc","result","cachedText","_loop","_i","_this2","_context5","process","GATSBY_AZURE_API_KEY","mode","Object","keys","forEach","k","split","slice","window","atob","ArrayBuffer","Uint8Array","charCodeAt","fetch","method","headers","Content-Type","Ocp-Apim-Subscription-Key","body","get","json","status","recognitionResult","line","lines","indexOf","t","str","includes","coords","boundingBox","offset","concat","el","textbox","Math","abs","_this3","className","styles","backdrop","map","e","ref","autoPlay","transform","prompt","onClick","controls","dispatch","changeReaderBG","bgColor","changeBG","_ref","layout","seo","title","cambackdrop","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","_constants__WEBPACK_IMPORTED_MODULE_0__","type","consts","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","shape","p","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","rel","href","integrity","crossorigin","defaultProps","arrayOf","Nav","isCollapse","toggleNav","Fragment","menuToggle","dark","light","navContainer","isActive","nav","profile","src","pages","url","gatsby_browser_entry","page","activeClassName","pageActive","to","Layout","_2924840780","node"],"mappings":"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","file":"component---src-pages-clipboard-js-e6527be81136f7950af1.js","sourcesContent":["import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return { readerBgColor: state.readerBgColor, readerColor: state.readerColor, readerFont: state.readerFont };\r\n};\r\n\r\nclass Textbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ backgroundColor: this.props.readerBgColor, zIndex: '1000', position: 'fixed', top: this.props.y, left: this.props.x }}>\r\n                <h1 style={{ margin: 0, fontSize: this.props.size, color: this.props.readerColor, fontFamily: this.props.readerFont}}>{this.props.text}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Textbox);","import React from 'react';\r\n\r\nimport styles from './cambackdrop.module.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeReaderBG, changeReaderColor } from '../../state/actions';\r\n\r\nimport Textbox from '../textbox/textbox';\r\n\r\nimport * as strSimilarity from 'string-similarity';\r\n\r\nconst mapStateToProps = state => {\r\n    return { readerBgColor: state.readerBgColor, readerColor: state.readerColor, readerFont: state.readerFont };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeReaderBG: readerBgColor => dispatch(changeReaderBG(readerBgColor)),\r\n    };\r\n};\r\n\r\nclass CamBackDrop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stream: '',\r\n            facingMode: 'user',\r\n            capture: null,\r\n            captureURL: '',\r\n            textBoxes: []\r\n        };\r\n\r\n        this.player = React.createRef();\r\n        this.canvas = React.createRef();\r\n\r\n        this.getCamera = this.getCamera.bind(this);\r\n        this.reverseCamera = this.reverseCamera.bind(this);\r\n        this.captureCamera = this.captureCamera.bind(this);\r\n        this.offCamera = this.offCamera.bind(this);\r\n        this.getCV = this.getCV.bind(this);\r\n        this.init = this.init.bind(this);\r\n\r\n        this.frameCount = 0;\r\n        this.textGroup = \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let { width, height } = this.player.current.getBoundingClientRect();\r\n        this.width = width;\r\n        this.height = height;\r\n        this.canvas.current.setAttribute('width', width);\r\n        this.canvas.current.setAttribute('height', height);\r\n        this.ctx = this.canvas.current.getContext('2d');\r\n        this.ctx.globalCompositeOperation = 'difference';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.offCamera();\r\n    }\r\n\r\n    async getCamera() {\r\n        try {\r\n            let stream = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: { facingMode: this.state.facingMode },\r\n            });\r\n\r\n            this.player.current.srcObject = stream;\r\n\r\n            this.setState({ stream: stream });\r\n\r\n            await setTimeout(this.init, 1000);\r\n            setInterval(this.captureCamera, 250);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async reverseCamera() {\r\n        if (this.state.facingMode === 'user')\r\n            this.setState({ facingMode: 'environment' });\r\n        else this.setState({ facingMode: 'user' });\r\n\r\n        console.log(this.state.facingMode);\r\n\r\n        await this.offCamera();\r\n\r\n        try {\r\n            await this.getCamera();\r\n        } catch (err) {\r\n            await this.reverseCamera();\r\n        }\r\n    }\r\n\r\n    checkMoved(imageData) {\r\n        let imageScore = 0;\r\n        for (let i = 0; i < imageData.data.length; i += 4) {\r\n            let r = imageData.data[i] / 3;\r\n            let g = imageData.data[i + 1] / 3;\r\n            let b = imageData.data[i + 2] / 3;\r\n            let pixelScore = r + g + b;\r\n\r\n            if (pixelScore >= 32)\r\n                imageScore++;\r\n        }\r\n        //console.log(imageScore);\r\n        if (imageScore >= 30000)\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    async captureCamera() {\r\n        if (this.frameCount % 2 == 0) {\r\n            this.ctx.globalCompositeOperation = 'difference';\r\n        } else\r\n            this.ctx.globalCompositeOperation = 'source-over';\r\n\r\n        //console.log(this.player.current.getBoundingClientRect());\r\n        //dtx.drawImage(this.state.captureURL, 0, 0);\r\n        //clear stuff\r\n        //this.ctx.clearRect(0, 0, this.width, this.height);\r\n        this.ctx.drawImage(\r\n            this.player.current,\r\n            0,\r\n            0,\r\n        );\r\n        //this.ctx.globalCompositeOperation = 'source-over';\r\n\r\n\r\n        /*\r\n        let dtx = this.diff.current.getContext('2d');\r\n        dtx.globalCompositeOperation = 'difference';\r\n        dtx.drawImage(this.player.current, 0, 0);\r\n        */\r\n        //console.log(this.player.current.width);\r\n        /*\r\n        let data = await new Promise(function (resolve, reject) {\r\n            this.canvas.current.toBlob((blob) => resolve(blob));\r\n        }.bind(this))\r\n        \r\n        this.setState({ capture: data, captureURL: URL.createObjectURL(data)});\r\n\r\n        console.log(captureURL);\r\n        */\r\n        /*\r\n         let dtx = this.diff.current.getContext('2d');\r\n         dtx.globalCompositeOperation = 'difference';\r\n         if(this.state.captureURL) {\r\n             console.log(this.state.captureURL);\r\n             //dtx.drawImage(this.state.captureURL, 0, 0);\r\n         }*/\r\n\r\n        //console.log(this.state);\r\n\r\n        let imgData = await this.ctx.getImageData(0, 0, this.width, this.height);\r\n        if (this.checkMoved(imgData) && this.frameCount % 2 != 0) {\r\n            //console.log(\"moved!\");\r\n            let data = await this.canvas.current.toDataURL(\"image/jpeg\");\r\n            this.setState({ captureURL: data });\r\n            await this.getCV();\r\n        } //else \r\n        //console.log(\"not moving!\");\r\n\r\n\r\n        this.frameCount++;\r\n    }\r\n\r\n    async offCamera() {\r\n        if (this.state.stream)\r\n            this.state.stream.getTracks()[0].stop();\r\n        this.setState({ stream: '' });\r\n        this.player.current.srcObject = null;\r\n    }\r\n\r\n    async getCV() {\r\n        //console.log(this.textGroup);\r\n        let key = process.env.GATSBY_AZURE_API_KEY;\r\n        let base = `https://eastus.api.cognitive.microsoft.com/vision/v2.0/recognizeText?mode=Printed`;\r\n        let params = {\r\n            //\"visualFeatures\": \"Categories,Description,Color\",\r\n            // \"details\": \"\",\r\n            \"mode\": \"Printed\",\r\n        };\r\n\r\n        let strParams = \"?\";\r\n        Object.keys(params).forEach((k) => {\r\n            strParams += `${k}=${params[k]}&`;\r\n        });\r\n\r\n        //console.log(strParams);\r\n\r\n        //turn image into arr\r\n        let data = this.state.captureURL.split(',')[1];\r\n        let mimeType = this.state.captureURL.split(';')[0].slice(5);\r\n\r\n        let bytes = window.atob(data);\r\n        let buf = new ArrayBuffer(bytes.length);\r\n        let byteArr = new Uint8Array(buf);\r\n\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            byteArr[i] = bytes.charCodeAt(i);\r\n        }\r\n\r\n        let res = await fetch(base /*+ strParams*/, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/octet-stream\",\r\n                \"Ocp-Apim-Subscription-Key\": key\r\n            },\r\n            //data: this.state.captureURL,\r\n            body: byteArr,\r\n            mode: 'no-cors'\r\n        });\r\n\r\n        let loc = res.headers.get('Operation-Location');\r\n        let result;\r\n        do {\r\n            result = await fetch(loc, {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Ocp-Apim-Subscription-Key\": key\r\n                },\r\n                mode: 'no-cors'\r\n            });\r\n\r\n            result = await result.json();\r\n            //console.log(result.status);\r\n        } while (result.status != \"Succeeded\")\r\n\r\n        //console.log(result);\r\n\r\n        //draw boxes \r\n        let ctx = this.canvas.current.getContext('2d');\r\n        let cachedText = \"\";\r\n        if (result && result.recognitionResult) {\r\n            this.setState({textBoxes: []});\r\n\r\n            for (let i = 0; i < result.recognitionResult.lines.length; i++) {\r\n                let line = result.recognitionResult.lines[i];\r\n\r\n                //check if exists\r\n                let trans = this.state.textBoxes.indexOf(function (t) {\r\n                    return t.str.includes(line.text);\r\n                });\r\n                //if (trans != 0) {\r\n\r\n                //    continue;\r\n                //}\r\n\r\n\r\n                cachedText += line.text;\r\n\r\n                let coords = line.boundingBox;\r\n\r\n                let offset = this.canvas.current.getBoundingClientRect();\r\n                this.setState({\r\n                    textBoxes: this.state.textBoxes.concat([{\r\n                        str: line.text,\r\n                        el: < Textbox key={line.text} x={coords[6] + offset.x} y={coords[7] + offset.y - Math.abs(coords[1] - coords[7])} text={line.text} size={Math.abs(coords[1] - coords[7])} />\r\n                    }])\r\n                });\r\n            }\r\n\r\n            //if(strSimilarity.compareTwoStrings(cachedText, this.textGroup) > \r\n            this.textGroup = cachedText;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.backdrop}>\r\n                {this.state.textBoxes.map(e => e.el)}\r\n                {/*<img src={this.state.captureURL} />*/}\r\n                {/*rotation only works well for mobile -> todo fix*/}\r\n                <video ref={this.player} autoPlay style={{\r\n                    transform: `translate(-50%, -50%) rotateY(${(this.state.facingMode === 'user' && false) ? '180' : '0'}deg)`\r\n                }} />\r\n                <canvas ref={this.canvas} style={{ transform: `translate(-50%, -50%)` }} />\r\n\r\n                {!this.state.stream ? (\r\n                    <div\r\n                        className={styles.prompt}\r\n                        onClick={() => {\r\n                            this.setState({ facingMode: 'user' });\r\n                            this.getCamera();\r\n                        }}\r\n                    >\r\n                        <h1>Turn on Camera</h1>\r\n                    </div>\r\n                ) : null}\r\n                <div className={styles.controls}>\r\n                    <div>\r\n                        <button onClick={this.offCamera}>\r\n                            <i className=\"fas fa-images\" />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.captureCamera}>\r\n                            <i className=\"far fa-circle\" />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.reverseCamera}>\r\n                            <i className=\"fas fa-sync-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CamBackDrop);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Layout from '../components/layout/layout';\r\nimport Image from '../components/image';\r\nimport SEO from '../components/seo';\r\n\r\nimport CamBackDrop from '../components/cambackdrop/cambackdrop';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../state/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nconst ClipboardPage = ({ changeBG }) => {\r\n    changeBG('black');\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Clipboard\" />\r\n            <CamBackDrop />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ClipboardPage);\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as consts from './constants';\n\nexport function changeBG(bgColor) {\n    return { type: consts.CHANGE_BG, bgColor: bgColor };\n}\n\nexport function changeReaderBG(readerBgColor) {\n    return {type: consts.CHANGE_READER_BG, readerBgColor: readerBgColor};\n}\n\nexport function changeReaderColor(readerColor) {\n    return {type: consts.CHANGE_READER_COLOR, readerColor: readerColor};\n}\n\nexport function changeReaderFont(readerFont) {\n    return {type: consts.CHANGE_READER_BG, readerFont: readerFont};\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/reading-profile-667bb35fe9e05f79fe62d06332339c07.png\";","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        title\r\n                        description\r\n                        author\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n\r\n    const metaDescription = description || site.siteMetadata.description;\r\n\r\n    return (\r\n        <Helmet\r\n            htmlAttributes={{\r\n                lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: metaDescription,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: title,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: metaDescription,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: site.siteMetadata.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: metaDescription,\r\n                },\r\n            ].concat(meta)}\r\n        >\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\r\n                integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\"\r\n                crossorigin=\"anonymous\"\r\n            />\r\n        </Helmet>\r\n    );\r\n}\r\n\r\nSEO.defaultProps = {\r\n    lang: `en`,\r\n    meta: [],\r\n    description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n    description: PropTypes.string,\r\n    lang: PropTypes.string,\r\n    meta: PropTypes.arrayOf(PropTypes.object),\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nimport styles from './nav.module.scss';\r\n\r\nimport '../styles/hamburgers/hamburgers.scss';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isCollapse: false,\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({ isCollapse: !this.state.isCollapse });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={`${\r\n                        styles.menuToggle\r\n                    } hamburger hamburger--spin ${\r\n                        this.state.isCollapse ? 'is-active' : ''\r\n                    }`}\r\n                    onClick={this.toggleNav}\r\n                    type=\"button\"\r\n                >\r\n                    <span className=\"hamburger-box\">\r\n                        <span\r\n                            className={`hamburger-inner ${\r\n                                this.props.bgColor == 'black'\r\n                                    ? styles.dark\r\n                                    : styles.light\r\n                            }`}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className={`${styles.navContainer} ${\r\n                        this.state.isCollapse ? styles.isActive : ''\r\n                    }`}\r\n                >\r\n                    <div className={styles.nav}>\r\n                        <div className={styles.profile}>\r\n                            <img\r\n                                src={require('../../images/reading-profile.png')}\r\n                            />\r\n                            <h1>Easyread</h1>\r\n                            <p>Welcome back!</p>\r\n                        </div>\r\n                        <hr />\r\n                        <ul className={styles.pages}>\r\n                            {[\r\n                                {\r\n                                    name: 'Clipboard',\r\n                                    url: '/clipboard',\r\n                                },\r\n                                ,\r\n                                {\r\n                                    name: 'Settings',\r\n                                    url: '/settings',\r\n                                },\r\n                                {\r\n                                    name: 'Progress Tracker',\r\n                                    url: '/tracker',\r\n                                },\r\n                            ].map(e => (\r\n                                <li key={e.url}>\r\n                                    <Link\r\n                                        className={styles.page}\r\n                                        activeClassName={styles.pageActive}\r\n                                        to={e.url}\r\n                                    >\r\n                                        <i className=\"fas fa-heart fa-2x\" />\r\n                                        <p>{e.name}</p>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Nav);\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nimport Nav from '../nav/nav';\r\nimport './layout.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeBG } from '../../state/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return { bgColor: state.bgColor };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBG: bgColor => dispatch(changeBG(bgColor)),\r\n    };\r\n};\r\n\r\nconst Layout = ({ bgColor, changeBG, children }) => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query SiteTitleQuery {\r\n                site {\r\n                    siteMetadata {\r\n                        title\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => (\r\n            <>\r\n                <Nav />\r\n                <div className=\"main\" style={{ backgroundColor: bgColor }}>\r\n                    {/*\r\n                   <button onClick={() => changeBG('red')}>red</button>\r\n                    <button onClick={() => changeBG('white')}>white</button>\r\n                   */}\r\n                    <main>{children}</main>\r\n                    <footer />\r\n                </div>\r\n            </>\r\n        )}\r\n    />\r\n);\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n"],"sourceRoot":""}