{"version":3,"sources":["webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","default","io","_inheritsLoose2","_assertThisInitialized2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","convertProps","props","convertedProps","resolutions","fixed","sizes","fluid","imageCache","Object","create","inImageCache","src","listeners","WeakMap","listenToIntersections","el","cb","observer","window","IntersectionObserver","entries","forEach","entry","has","target","get","isIntersecting","intersectionRatio","unobserve","delete","rootMargin","observe","set","noscriptImg","srcSetWebp","srcSet","title","alt","width","height","crossOrigin","loading","Img","forwardRef","ref","style","onLoad","onError","nativeLazyLoadSupported","otherProps","loadingAttribute","createElement","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","_this","call","this","isVisible","IOSupported","fadeIn","seenBefore","HTMLImageElement","prototype","critical","hasNoScript","state","imgLoaded","imgCached","imageRef","createRef","handleImageLoaded","bind","handleRef","_proto","componentDidMount","onStartLoad","wasCached","img","current","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","setState","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","image","overflow","key","JSON","stringify","paddingBottom","aspectRatio","bottom","right","base64","tracedSVG","type","dangerouslySetInnerHTML","__html","_image","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","bool","oneOfType","oneOf","_default","module","g","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","then","result","done","value","toString","keys","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","accidentalStrictMode","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"10-e6c63e3f454275b67d36.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n// Handle legacy names for image queries.\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n\n  if (convertedProps.resolutions) {\n    convertedProps.fixed = convertedProps.resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (convertedProps.sizes) {\n    convertedProps.fluid = convertedProps.sizes;\n    delete convertedProps.sizes;\n  }\n\n  return convertedProps;\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  return imageCache[src] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  imageCache[src] = true;\n};\n\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSetWebp = props.srcSetWebp ? \"<source type='image/webp' srcset=\\\"\" + props.srcSetWebp + \"\\\" \" + sizes + \"/>\" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\"; // Since we're in the noscript block for this image (which is rendered during SSR or when js is disabled),\n  // we have no way to \"detect\" if native lazy loading is supported by the user's browser\n  // Since this attribute is a progressive enhancement, it won't break a browser with no support\n  // Therefore setting it by default is a good idea.\n\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  return \"<picture>\" + srcSetWebp + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n};\n\nvar Img = _react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      nativeLazyLoadSupported = props.nativeLazyLoadSupported,\n      loading = props.loading,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"nativeLazyLoadSupported\", \"loading\"]);\n  var loadingAttribute = {};\n\n  if (nativeLazyLoadSupported) {\n    loadingAttribute.loading = loading;\n  }\n\n  return _react.default.createElement(\"img\", (0, _extends2.default)({\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref\n  }, loadingAttribute, {\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // default settings for browser without Intersection Observer available\n\n    var isVisible = true;\n    var imgLoaded = false;\n    var imgCached = false;\n    var IOSupported = false;\n    var fadeIn = props.fadeIn;\n    var nativeLazyLoadSupported = false; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    var seenBefore = inImageCache(props); // browser with Intersection Observer available\n\n    if (!seenBefore && typeof window !== \"undefined\" && window.IntersectionObserver) {\n      isVisible = false;\n      IOSupported = true;\n    } // Chrome Canary 75 added native lazy loading support!\n    // https://addyosmani.com/blog/lazy-loading/\n\n\n    if (typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype) {\n      // Setting isVisible to true to short circuit our IO code and let the browser do its magic\n      isVisible = true;\n      nativeLazyLoadSupported = true;\n    } // Never render image during SSR\n\n\n    if (typeof window === \"undefined\") {\n      isVisible = false;\n    } // Force render for critical images\n\n\n    if (props.critical) {\n      isVisible = true;\n      IOSupported = false;\n    }\n\n    var hasNoScript = !(props.critical && !props.fadeIn);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: imgLoaded,\n      imgCached: imgCached,\n      IOSupported: IOSupported,\n      fadeIn: fadeIn,\n      hasNoScript: hasNoScript,\n      seenBefore: seenBefore,\n      nativeLazyLoadSupported: nativeLazyLoadSupported\n    };\n    _this.imageRef = _react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.props.critical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.state.nativeLazyLoadSupported) {\n      // Bail because the browser natively supports lazy loading\n      return;\n    }\n\n    if (this.state.IOSupported && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          return _this2.setState({\n            imgLoaded: imageInCache,\n            imgCached: !!_this2.imageRef.current.currentSrc\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.state.seenBefore) {\n      this.setState({\n        fadeIn: false\n      });\n    }\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        critical = _convertProps.critical;\n\n    var _convertProps2 = convertProps(this.props),\n        loading = _convertProps2.loading;\n\n    if (typeof critical === \"boolean\" && process.env.NODE_ENV !== \"production\") {\n      console.log(\"\\n        The \\\"critical\\\" prop is now deprecated and will be removed in the next major version \\n        of \\\"gatsby-image\\\"\\n\\n        Please use the native \\\"loading\\\" attribute instead of \\\"critical\\\" \\n        \"); // We want to continue supporting critical and in case it is passed in\n      // we map its value to loading\n\n      loading = critical ? \"eager\" : \"lazy\";\n    }\n\n    var nativeLazyLoadSupported = this.state.nativeLazyLoadSupported;\n    var shouldReveal = this.state.imgLoaded || this.state.fadeIn === false;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName\n    };\n\n    if (fluid) {\n      var image = fluid;\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\"\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, _react.default.createElement(Tag, {\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.base64\n      }, placeholderImageProps)), image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: image.srcSetWebp,\n        sizes: image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        nativeLazyLoadSupported: nativeLazyLoadSupported,\n        loading: loading\n      })), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _image = fixed;\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.base64\n      }, placeholderImageProps)), _image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, _image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: _image.srcSetWebp,\n        sizes: _image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        nativeLazyLoadSupported: nativeLazyLoadSupported,\n        loading: loading\n      })), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, _image))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"])\n};\nvar _default = Image;\nexports.default = _default;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}